PS C:\Users\Public.IT-PC\Downloads\spark\spark-3.5.4-bin-hadoop3\bin> python
Python 3.12.0 (tags/v3.12.0:0fb18b0, Oct  2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from pyspark.sql import SparkSession
>>> from pyspark.sql.functions import col # this is critical for filtering
>>> from pyspark.sql.functions import cast
>>> from pyspark.sql.types import IntegerType
>>>
>>>
>>> #spark= SparkSession.builder.getOrCreate()
>>>
>>> #spark= SparkSession.builder.config("spark.eventlog.enabled", "true").config("spark.eventlog.dir", r"C:\Users\Public.IT-PC\Downloads").config("spark.logConf", "true")\
>>> #.config("spark.memory.offHeap.enabled", "true").config("spark.memory.offHeap.size", 500000).getOrCreate()
>>>
>>>
>>> spark= SparkSession.builder.config("spark.eventlog.enabled", "true").config("spark.eventlog.dir", r"C:\Users\Public.IT-PC\Downloads").config("spark.logConf", "true")\
... .getOrCreate()
25/02/13 17:20:59 WARN Shell: Did not find winutils.exe: java.io.FileNotFoundException: java.io.FileNotFoundException: HADOOP_HOME and hadoop.home.dir are unset. -see https://wiki.apache.org/hadoop/WindowsProblems
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
25/02/13 17:20:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
>>>
>>>
>>>
>>> spark.sparkContext.setLogLevel("ALL")
>>> #spark.sparkContext.setLogLevel("DEBUG")
>>> #spark.sparkContext.setLogLevel("INFO")
>>>
>>> #df=spark.read.csv("houses.csv")
>>>
>>> df=spark.read.option("header",True).csv("houses.csv")
25/02/13 17:21:03 DEBUG FileSystem: Loading filesystems
25/02/13 17:21:03 DEBUG FileSystem: file:// = class org.apache.hadoop.fs.LocalFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: viewfs:// = class org.apache.hadoop.fs.viewfs.ViewFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: har:// = class org.apache.hadoop.fs.HarFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: http:// = class org.apache.hadoop.fs.http.HttpFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: https:// = class org.apache.hadoop.fs.http.HttpsFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: hdfs:// = class org.apache.hadoop.hdfs.DistributedFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: webhdfs:// = class org.apache.hadoop.hdfs.web.WebHdfsFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: swebhdfs:// = class org.apache.hadoop.hdfs.web.SWebHdfsFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hadoop-client-api-3.3.4.jar
25/02/13 17:21:03 DEBUG FileSystem: nullscan:// = class org.apache.hadoop.hive.ql.io.NullScanFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hive-exec-2.3.9-core.jar
25/02/13 17:21:03 DEBUG FileSystem: file:// = class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem from /C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/jars/hive-exec-2.3.9-core.jar
25/02/13 17:21:03 DEBUG FileSystem: Looking for FS supporting file
25/02/13 17:21:03 DEBUG FileSystem: looking for configuration option fs.file.impl
25/02/13 17:21:03 DEBUG FileSystem: Looking in service filesystems for implementation class
25/02/13 17:21:03 DEBUG FileSystem: FS for file is class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem
25/02/13 17:21:03 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
25/02/13 17:21:03 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.logConf -> true
25/02/13 17:21:03 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.eventlog.enabled -> true
25/02/13 17:21:03 DEBUG SharedState: Applying other initial session options to HadoopConf: spark.eventlog.dir -> C:\Users\Public.IT-PC\Downloads
25/02/13 17:21:03 DEBUG FileSystem: Starting: Acquiring creator semaphore for file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/spark-warehouse
25/02/13 17:21:03 DEBUG FileSystem: Acquiring creator semaphore for file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/spark-warehouse: duration 0:00.004s
25/02/13 17:21:03 DEBUG FileSystem: Starting: Creating FS file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/spark-warehouse
25/02/13 17:21:03 DEBUG FileSystem: Looking for FS supporting file
25/02/13 17:21:03 DEBUG FileSystem: looking for configuration option fs.file.impl
25/02/13 17:21:03 DEBUG FileSystem: Looking in service filesystems for implementation class
25/02/13 17:21:03 DEBUG FileSystem: FS for file is class org.apache.hadoop.hive.ql.io.ProxyLocalFileSystem
25/02/13 17:21:03 DEBUG FileSystem: Creating FS file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/spark-warehouse: duration 0:00.007s
25/02/13 17:21:03 INFO SharedState: Warehouse path is 'file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/spark-warehouse'.
25/02/13 17:21:03 DEBUG FsUrlStreamHandlerFactory: Creating handler for protocol jar
25/02/13 17:21:03 DEBUG FileSystem: Looking for FS supporting jar
25/02/13 17:21:03 DEBUG FileSystem: looking for configuration option fs.jar.impl
25/02/13 17:21:03 DEBUG FileSystem: Looking in service filesystems for implementation class
25/02/13 17:21:03 DEBUG FsUrlStreamHandlerFactory: Unknown protocol jar, delegating to default implementation
25/02/13 17:21:04 DEBUG DataSource: Some paths were ignored:

25/02/13 17:21:04 TRACE HadoopFSUtils: Listing file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv
25/02/13 17:21:04 INFO InMemoryFileIndex: It took 45 ms to list leaf files for 1 paths.
25/02/13 17:21:04 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:04 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:04 TRACE HadoopFSUtils: Listing file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv
25/02/13 17:21:04 INFO InMemoryFileIndex: It took 1 ms to list leaf files for 1 paths.
25/02/13 17:21:04 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:04 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:04 DEBUG CatalystSqlParser: Parsing command: spark_grouping_id
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:05 TRACE Analyzer$ResolveReferences: Attempting to resolve Relation [value#0] text
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:05 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.1593643 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:05 DEBUG Analyzer$ResolveReferences: Resolving 'value to value#0
25/02/13 17:21:05 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Project ['value]            Project [value#0]
 +- Relation [value#0] text   +- Relation [value#0] text

25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project ['value]            Project [value#0]
 +- Relation [value#0] text   +- Relation [value#0] text

25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:05 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:05 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:05 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0331812 seconds
Total number of effective runs: 1
Total time of effective runs: 0.0111388 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#0]
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#5: java.lang.String   'DeserializeToObject upcast(value#0, StringType, - root class: "java.lang.String").toString, obj#5: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                                                                      +- LocalRelation <empty>, [value#0]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#0, StringType, - root class: "java.lang.String").toString, obj#5: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                    +- LocalRelation <empty>, [value#0]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String
 +- LocalRelation <empty>, [value#0]                                             +- LocalRelation <empty>, [value#0]

25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#0]
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#5: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                                                                      +- LocalRelation <empty>, [value#0]

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0337767 seconds
Total number of effective runs: 3
Total time of effective runs: 0.0255151 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0049825 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 DEBUG Analyzer$ResolveReferences: Resolving 'value to value#7
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#7, None)) > 0)
 +- Project [value#0 AS value#7]            +- Project [value#0 AS value#7]
    +- Project [value#0]                       +- Project [value#0]
       +- Relation [value#0] text                 +- Relation [value#0] text

25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve Filter (length(trim(value#7, None)) > 0)
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#7, None)) > 0)
 +- Project [value#0 AS value#7]            +- Project [value#0 AS value#7]
    +- Project [value#0]                       +- Project [value#0]
       +- Relation [value#0] text                 +- Relation [value#0] text

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0159732 seconds
Total number of effective runs: 1
Total time of effective runs: 0.0068645 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#7]
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#10: java.lang.String   'DeserializeToObject upcast(value#7, StringType, - root class: "java.lang.String").toString, obj#10: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                                                                       +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#7, StringType, - root class: "java.lang.String").toString, obj#10: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#10: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                     +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#7 as string).toString, obj#10: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#10: java.lang.String
 +- LocalRelation <empty>, [value#7]                                              +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#7]
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#7 as string).toString, obj#10: java.lang.String
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#10: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#10: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                                                                       +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0050125 seconds
Total number of effective runs: 3
Total time of effective runs: 7.363E-4 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalLimit 1
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve GlobalLimit 1
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0030066 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#7]
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#12: java.lang.String   'DeserializeToObject upcast(value#7, StringType, - root class: "java.lang.String").toString, obj#12: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                                                                       +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#7, StringType, - root class: "java.lang.String").toString, obj#12: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#12: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                     +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#7 as string).toString, obj#12: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#12: java.lang.String
 +- LocalRelation <empty>, [value#7]                                              +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#7]
25/02/13 17:21:06 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#7 as string).toString, obj#12: java.lang.String
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#12: java.lang.String   DeserializeToObject cast(value#7 as string).toString, obj#12: java.lang.String
 +- LocalRelation <empty>, [value#7]                                                                                                                                       +- LocalRelation <empty>, [value#7]

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0050903 seconds
Total number of effective runs: 3
Total time of effective runs: 8.592E-4 seconds

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 GlobalLimit 1                                    GlobalLimit 1
 +- LocalLimit 1                                  +- LocalLimit 1
    +- Filter (length(trim(value#7, None)) > 0)      +- Filter (length(trim(value#7, None)) > 0)
       +- Project [value#0 AS value#7]                  +- Project [value#0 AS value#7]
!         +- Project [value#0]                             +- Relation [value#0] text
!            +- Relation [value#0] text

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Union ===
 GlobalLimit 1                                    GlobalLimit 1
 +- LocalLimit 1                                  +- LocalLimit 1
    +- Filter (length(trim(value#7, None)) > 0)      +- Filter (length(trim(value#7, None)) > 0)
       +- Project [value#0 AS value#7]                  +- Project [value#0 AS value#7]
!         +- Project [value#0]                             +- Relation [value#0] text
!            +- Relation [value#0] text

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 1                                    GlobalLimit 1
 +- LocalLimit 1                                  +- LocalLimit 1
!   +- Filter (length(trim(value#7, None)) > 0)      +- Project [value#0 AS value#7]
!      +- Project [value#0 AS value#7]                  +- Filter (length(trim(value#0, None)) > 0)
          +- Relation [value#0] text                       +- Relation [value#0] text

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveRedundantAliases ===
 GlobalLimit 1                                       GlobalLimit 1
 +- LocalLimit 1                                     +- LocalLimit 1
!   +- Project [value#0 AS value#7]                     +- Project [value#0]
       +- Filter (length(trim(value#0, None)) > 0)         +- Filter (length(trim(value#0, None)) > 0)
          +- Relation [value#0] text                          +- Relation [value#0] text

25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 GlobalLimit 1                                       GlobalLimit 1
 +- LocalLimit 1                                     +- LocalLimit 1
!   +- Project [value#0]                                +- Filter (length(trim(value#0, None)) > 0)
!      +- Filter (length(trim(value#0, None)) > 0)         +- Relation [value#0] text
!         +- Relation [value#0] text

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 2 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                    GlobalLimit 1
 +- LocalLimit 1                                  +- LocalLimit 1
!   +- Filter (length(trim(value#7, None)) > 0)      +- Filter (length(trim(value#0, None)) > 0)
!      +- Project [value#0 AS value#7]                  +- Relation [value#0] text
!         +- Relation [value#0] text

25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:06 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:06 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:06 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 243
Total time: 0.156132 seconds
Total number of effective runs: 4
Total time of effective runs: 0.0087782 seconds

25/02/13 17:21:07 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:07 INFO FileSourceStrategy: Post-Scan Filters: (length(trim(value#0, None)) > 0)
25/02/13 17:21:07 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 CollectLimit 1                                                                                                                                                                                                                                                                                            CollectLimit 1
!+- Filter (length(trim(value#0, None)) > 0)                                                                                                                                                                                                                                                               +- *(1) Filter (length(trim(value#0, None)) > 0)
    +- FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>      +- FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>

25/02/13 17:21:07 TRACE PlanChangeLogger:
=== Result of Batch Preparations ===
 CollectLimit 1                                                                                                                                                                                                                                                                                            CollectLimit 1
!+- Filter (length(trim(value#0, None)) > 0)                                                                                                                                                                                                                                                               +- *(1) Filter (length(trim(value#0, None)) > 0)
    +- FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>      +- FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>

25/02/13 17:21:07 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:07 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:07 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.358E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:07 DEBUG WholeStageCodegenExec:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (inputadapter_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = inputadapter_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (inputadapter_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

25/02/13 17:21:07 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (inputadapter_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = inputadapter_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (inputadapter_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

25/02/13 17:21:07 INFO CodeGenerator: Code generated in 169.3282 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to put broadcast_0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0
25/02/13 17:21:07 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 200.1 KiB, free 434.2 MiB)
25/02/13 17:21:07 DEBUG BlockManager: Put block broadcast_0 locally took 41 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_0
25/02/13 17:21:07 DEBUG BlockManager: Putting block broadcast_0 without replication took 46 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to put broadcast_0_piece0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0_piece0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0_piece0
25/02/13 17:21:07 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 34.5 KiB, free 434.2 MiB)
25/02/13 17:21:07 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_0_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:07 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on hy80:50377 (size: 34.5 KiB, free: 434.4 MiB)
25/02/13 17:21:07 DEBUG BlockManagerMaster: Updated info of block broadcast_0_piece0
25/02/13 17:21:07 DEBUG BlockManager: Told master about block broadcast_0_piece0
25/02/13 17:21:07 DEBUG BlockManager: Put block broadcast_0_piece0 locally took 8 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_0_piece0
25/02/13 17:21:07 DEBUG BlockManager: Putting block broadcast_0_piece0 without replication took 12 ms
25/02/13 17:21:07 INFO SparkContext: Created broadcast 0 from csv at <unknown>:0
25/02/13 17:21:07 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:07 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:07 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:07 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:07 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
25/02/13 17:21:07 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
25/02/13 17:21:07 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$executeTake$2
25/02/13 17:21:07 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$executeTake$2) is now cleaned +++
25/02/13 17:21:07 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$runJob$5
25/02/13 17:21:07 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$runJob$5) is now cleaned +++
25/02/13 17:21:07 INFO SparkContext: Starting job: csv at <unknown>:0
25/02/13 17:21:07 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 3 took 0.000746 seconds
25/02/13 17:21:07 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:07 INFO DAGScheduler: Got job 0 (csv at <unknown>:0) with 1 output partitions
25/02/13 17:21:07 INFO DAGScheduler: Final stage: ResultStage 0 (csv at <unknown>:0)
25/02/13 17:21:07 INFO DAGScheduler: Parents of final stage: List()
25/02/13 17:21:07 INFO DAGScheduler: Missing parents: List()
25/02/13 17:21:07 DEBUG DAGScheduler: submitStage(ResultStage 0 (name=csv at <unknown>:0;jobs=0))
25/02/13 17:21:07 DEBUG DAGScheduler: missing: List()
25/02/13 17:21:07 INFO DAGScheduler: Submitting ResultStage 0 (MapPartitionsRDD[3] at csv at <unknown>:0), which has no missing parents
25/02/13 17:21:07 DEBUG DAGScheduler: submitMissingTasks(ResultStage 0)
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to put broadcast_1
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_1
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_1
25/02/13 17:21:07 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 13.5 KiB, free 434.2 MiB)
25/02/13 17:21:07 DEBUG BlockManager: Put block broadcast_1 locally took 1 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_1
25/02/13 17:21:07 DEBUG BlockManager: Putting block broadcast_1 without replication took 2 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to put broadcast_1_piece0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_1_piece0
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_1_piece0
25/02/13 17:21:07 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 6.4 KiB, free 434.2 MiB)
25/02/13 17:21:07 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_1_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:07 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on hy80:50377 (size: 6.4 KiB, free: 434.4 MiB)
25/02/13 17:21:07 DEBUG BlockManagerMaster: Updated info of block broadcast_1_piece0
25/02/13 17:21:07 DEBUG BlockManager: Told master about block broadcast_1_piece0
25/02/13 17:21:07 DEBUG BlockManager: Put block broadcast_1_piece0 locally took 1 ms
25/02/13 17:21:07 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_1_piece0
25/02/13 17:21:07 DEBUG BlockManager: Putting block broadcast_1_piece0 without replication took 2 ms
25/02/13 17:21:07 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1585
25/02/13 17:21:07 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[3] at csv at <unknown>:0) (first 15 tasks are for partitions Vector(0))
25/02/13 17:21:07 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
25/02/13 17:21:07 DEBUG TaskSetManager: Epoch for TaskSet 0.0: 0
25/02/13 17:21:07 DEBUG TaskSetManager: Adding pending tasks took 1 ms
25/02/13 17:21:07 DEBUG TaskSetManager: Valid locality levels for TaskSet 0.0: NO_PREF, ANY
25/02/13 17:21:07 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_0.0, runningTasks: 0
25/02/13 17:21:07 DEBUG TaskSetManager: Valid locality levels for TaskSet 0.0: NO_PREF, ANY
25/02/13 17:21:07 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (hy80, executor driver, partition 0, PROCESS_LOCAL, 9646 bytes)
25/02/13 17:21:07 DEBUG TaskSetManager: No tasks for locality level NO_PREF, so moving to locality level ANY
25/02/13 17:21:07 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
25/02/13 17:21:07 DEBUG ExecutorMetricsPoller: stageTCMP: (0, 0) -> 1
25/02/13 17:21:08 DEBUG BlockManager: Getting local block broadcast_1
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 trying to acquire read lock for broadcast_1
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 acquired read lock for broadcast_1
25/02/13 17:21:08 DEBUG BlockManager: Level for block broadcast_1 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:08 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (inputadapter_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = inputadapter_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (inputadapter_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

25/02/13 17:21:08 INFO CodeGenerator: Code generated in 13.4144 ms
25/02/13 17:21:08 INFO FileScanRDD: Reading File path: file:///C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv, range: 0-267845, partition values: [empty row]
25/02/13 17:21:08 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.1E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:08 DEBUG GenerateUnsafeProjection: code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

25/02/13 17:21:08 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

25/02/13 17:21:08 INFO CodeGenerator: Code generated in 11.0689 ms
25/02/13 17:21:08 DEBUG BlockManager: Getting local block broadcast_0
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 trying to acquire read lock for broadcast_0
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 acquired read lock for broadcast_0
25/02/13 17:21:08 DEBUG BlockManager: Level for block broadcast_0 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 releasing lock for broadcast_0
25/02/13 17:21:08 TRACE BlockInfoManager: Task 0 releasing lock for broadcast_1
25/02/13 17:21:08 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1818 bytes result sent to driver
25/02/13 17:21:08 DEBUG ExecutorMetricsPoller: stageTCMP: (0, 0) -> 0
25/02/13 17:21:08 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 224 ms on hy80 (executor driver) (1/1)
25/02/13 17:21:08 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
25/02/13 17:21:08 INFO DAGScheduler: ResultStage 0 (csv at <unknown>:0) finished in 0.364 s
25/02/13 17:21:08 DEBUG DAGScheduler: After removal of stage 0, remaining stages = 0
25/02/13 17:21:08 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
25/02/13 17:21:08 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
25/02/13 17:21:08 INFO DAGScheduler: Job 0 finished: csv at <unknown>:0, took 0.406113 s
25/02/13 17:21:08 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.65E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:08 DEBUG GenerateSafeProjection: code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */       isNull_0 = false;
/* 030 */       if (!isNull_0) {
/* 031 */
/* 032 */         Object funcResult_0 = null;
/* 033 */         funcResult_0 = value_1.toString();
/* 034 */         value_0 = (java.lang.String) funcResult_0;
/* 035 */
/* 036 */       }
/* 037 */     }
/* 038 */     if (isNull_0) {
/* 039 */       mutableRow.setNullAt(0);
/* 040 */     } else {
/* 041 */
/* 042 */       mutableRow.update(0, value_0);
/* 043 */     }
/* 044 */
/* 045 */     return mutableRow;
/* 046 */   }
/* 047 */
/* 048 */
/* 049 */ }

25/02/13 17:21:08 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */       isNull_0 = false;
/* 030 */       if (!isNull_0) {
/* 031 */
/* 032 */         Object funcResult_0 = null;
/* 033 */         funcResult_0 = value_1.toString();
/* 034 */         value_0 = (java.lang.String) funcResult_0;
/* 035 */
/* 036 */       }
/* 037 */     }
/* 038 */     if (isNull_0) {
/* 039 */       mutableRow.setNullAt(0);
/* 040 */     } else {
/* 041 */
/* 042 */       mutableRow.update(0, value_0);
/* 043 */     }
/* 044 */
/* 045 */     return mutableRow;
/* 046 */   }
/* 047 */
/* 048 */
/* 049 */ }

25/02/13 17:21:08 INFO CodeGenerator: Code generated in 9.2322 ms
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(34)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 34
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 34
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(45)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 45
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 45
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(41)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 41
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 41
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(58)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 58
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 58
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(28)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 28
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 28
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(55)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 55
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 55
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(42)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 42
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#15: java.lang.String   'DeserializeToObject upcast(value#0, StringType, - root class: "java.lang.String").toString, obj#15: java.lang.String
 +- Project [value#0]                                                                                                                                                      +- Project [value#0]
    +- Relation [value#0] text                                                                                                                                                +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 42
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(57)
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#0, StringType, - root class: "java.lang.String").toString, obj#15: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
 +- Project [value#0]                                                                                                    +- Project [value#0]
    +- Relation [value#0] text                                                                                              +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 57
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 57
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(27)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 27
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 27
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
 +- Project [value#0]                                                             +- Project [value#0]
    +- Relation [value#0] text                                                       +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(35)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 35
25/02/13 17:21:08 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 35
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(51)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 51
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 51
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(33)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 33
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#15: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
 +- Project [value#0]                                                                                                                                                      +- Project [value#0]
    +- Relation [value#0] text                                                                                                                                                +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 33
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(36)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 36
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 36
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(54)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 54
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 54
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(59)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 59
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 59
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(48)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 48
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 48
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(52)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 52
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 52
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(40)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 40
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 40
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(31)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 31
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 31
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(53)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 53
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0047626 seconds
Total number of effective runs: 3
Total time of effective runs: 0.0012049 seconds

25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 53
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(37)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 37
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 37
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(43)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 43
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 43
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(44)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 44
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 44
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(60)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 60
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 60
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(56)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 56
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 56
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
!+- Project [value#0]                                                             +- Relation [value#0] text
!   +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(61)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 2 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 61
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Result of Batch Union ===
 DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String
!+- Project [value#0]                                                             +- Relation [value#0] text
!   +- Relation [value#0] text

25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 61
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(46)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 46
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 46
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(30)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 30
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 30
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(1)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning broadcast 1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:08 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 1
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.SimplifyCasts ===
!DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String   DeserializeToObject value#0.toString, obj#15: java.lang.String
 +- Relation [value#0] text                                                       +- Relation [value#0] text

25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 2 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#0 as string).toString, obj#15: java.lang.String   DeserializeToObject value#0.toString, obj#15: java.lang.String
 +- Relation [value#0] text                                                       +- Relation [value#0] text

25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:08 DEBUG BlockManagerStorageEndpoint: removing broadcast 1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:08 DEBUG BlockManager: Removing broadcast 1
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:08 DEBUG BlockManager: Removing block broadcast_1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_1
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:08 DEBUG MemoryStore: Block broadcast_1 of size 13792 dropped from memory (free 455254628)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:08 DEBUG BlockManager: Removing block broadcast_1_piece0
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_1_piece0
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_1_piece0
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:08 DEBUG MemoryStore: Block broadcast_1_piece0 of size 6536 dropped from memory (free 455261164)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_1_piece0
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:08 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_1_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:08 INFO BlockManagerInfo: Removed broadcast_1_piece0 on hy80:50377 in memory (size: 6.4 KiB, free: 434.4 MiB)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:08 DEBUG BlockManagerMaster: Updated info of block broadcast_1_piece0
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:08 DEBUG BlockManager: Told master about block broadcast_1_piece0
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:08 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 1, response is 0
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:08 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned broadcast 1
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(32)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 32
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 32
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(49)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 49
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 49
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(50)
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 50
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 50
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(38)
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 38
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 38
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 243
Total time: 0.0051548 seconds
Total number of effective runs: 2
Total time of effective runs: 1.915E-4 seconds

25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(29)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 29
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 29
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(39)
25/02/13 17:21:08 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 39
25/02/13 17:21:08 INFO FileSourceStrategy: Post-Scan Filters:
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 39
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(47)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 47
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 47
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Preparations has no effect.
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to put broadcast_2
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_2
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_2
25/02/13 17:21:08 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 200.1 KiB, free 434.0 MiB)
25/02/13 17:21:08 DEBUG BlockManager: Put block broadcast_2 locally took 4 ms
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_2
25/02/13 17:21:08 DEBUG BlockManager: Putting block broadcast_2 without replication took 5 ms
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to put broadcast_2_piece0
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_2_piece0
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_2_piece0
25/02/13 17:21:08 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 34.5 KiB, free 433.9 MiB)
25/02/13 17:21:08 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_2_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:08 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on hy80:50377 (size: 34.5 KiB, free: 434.3 MiB)
25/02/13 17:21:08 DEBUG BlockManagerMaster: Updated info of block broadcast_2_piece0
25/02/13 17:21:08 DEBUG BlockManager: Told master about block broadcast_2_piece0
25/02/13 17:21:08 DEBUG BlockManager: Put block broadcast_2_piece0 locally took 2 ms
25/02/13 17:21:08 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_2_piece0
25/02/13 17:21:08 DEBUG BlockManager: Putting block broadcast_2_piece0 without replication took 5 ms
25/02/13 17:21:08 INFO SparkContext: Created broadcast 2 from csv at <unknown>:0
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(5)
25/02/13 17:21:08 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 5
25/02/13 17:21:08 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 5
25/02/13 17:21:08 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(20)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 20
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 20
25/02/13 17:21:08 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(9)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 9
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 9
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(12)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 12
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 12
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(14)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 14
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 14
25/02/13 17:21:08 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$rdd$1
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(16)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 16
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 16
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(3)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 3
25/02/13 17:21:08 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$rdd$1) is now cleaned +++
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 3
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(13)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 13
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 13
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(2)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 2
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 2
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(23)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 23
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 23
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(18)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 18
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 18
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(15)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 15
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 15
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(25)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 25
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 25
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(1)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 1
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 1
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(24)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 24
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 24
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(11)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 11
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 11
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(4)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 4
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 4
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(22)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 22
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 22
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(8)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 8
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 8
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(10)
25/02/13 17:21:08 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$inferFromDataset$2
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 10
25/02/13 17:21:08 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$inferFromDataset$2) is now cleaned +++
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 10
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(7)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 7
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 7
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(21)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 21
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 21
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(17)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 17
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 17
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(6)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 6
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 6
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(26)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 26
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 26
25/02/13 17:21:08 DEBUG ContextCleaner: Got cleaning task CleanAccum(19)
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaning accumulator 19
25/02/13 17:21:08 DEBUG ContextCleaner: Cleaned accumulator 19
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:08 TRACE Analyzer$ResolveReferences: Attempting to resolve Relation [Neighborhood#17,Building.Classification#18,Total.Units#19,Year_Built#20,Gross.SqFt#21,Estimated.Gross.Income#22,Gross.Income.per.SqFt#23,Estimated.Expense#24,Expense.per.SqFt#25,Net.Operating.Income#26,Full.Market.Value#27,Market.Value.per.SqFt#28,Boro#29] csv
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:08 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:08 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:08 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0066013 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

>>> 25/02/13 17:21:12 DEBUG ProcfsMetricsGetter: Exception when trying to compute pagesize, as a result reporting of ProcessTree metrics is stopped
25/02/13 17:21:12 DEBUG ExecutorMetricsPoller: removing (0, 0) from stageTCMP
df=spark.read.option("header",True).csv("houses.csv")
25/02/13 17:21:15 DEBUG DataSource: Some paths were ignored:

25/02/13 17:21:15 TRACE HadoopFSUtils: Listing file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv
25/02/13 17:21:15 INFO InMemoryFileIndex: It took 1 ms to list leaf files for 1 paths.
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE HadoopFSUtils: Listing file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv
25/02/13 17:21:15 INFO InMemoryFileIndex: It took 2 ms to list leaf files for 1 paths.
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve Relation [value#43] text
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0012614 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 DEBUG Analyzer$ResolveReferences: Resolving 'value to value#43
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Project ['value]             Project [value#43]
 +- Relation [value#43] text   +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project ['value]             Project [value#43]
 +- Relation [value#43] text   +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0019736 seconds
Total number of effective runs: 1
Total time of effective runs: 3.32E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#43]
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#48: java.lang.String   'DeserializeToObject upcast(value#43, StringType, - root class: "java.lang.String").toString, obj#48: java.lang.String
 +- LocalRelation <empty>, [value#43]                                                                                                                                      +- LocalRelation <empty>, [value#43]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#43, StringType, - root class: "java.lang.String").toString, obj#48: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#48: java.lang.String
 +- LocalRelation <empty>, [value#43]                                                                                     +- LocalRelation <empty>, [value#43]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#43 as string).toString, obj#48: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#48: java.lang.String
 +- LocalRelation <empty>, [value#43]                                              +- LocalRelation <empty>, [value#43]

25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#43]
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#43 as string).toString, obj#48: java.lang.String
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#48: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#48: java.lang.String
 +- LocalRelation <empty>, [value#43]                                                                                                                                      +- LocalRelation <empty>, [value#43]

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0036236 seconds
Total number of effective runs: 3
Total time of effective runs: 6.291E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0022579 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 DEBUG Analyzer$ResolveReferences: Resolving 'value to value#50
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#50, None)) > 0)
 +- Project [value#43 AS value#50]          +- Project [value#43 AS value#50]
    +- Project [value#43]                      +- Project [value#43]
       +- Relation [value#43] text                +- Relation [value#43] text

25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve Filter (length(trim(value#50, None)) > 0)
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#50, None)) > 0)
 +- Project [value#43 AS value#50]          +- Project [value#43 AS value#50]
    +- Project [value#43]                      +- Project [value#43]
       +- Relation [value#43] text                +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0027291 seconds
Total number of effective runs: 1
Total time of effective runs: 6.697E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#50]
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#53: java.lang.String   'DeserializeToObject upcast(value#50, StringType, - root class: "java.lang.String").toString, obj#53: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                                                                      +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#50, StringType, - root class: "java.lang.String").toString, obj#53: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#53: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                     +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#50 as string).toString, obj#53: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#53: java.lang.String
 +- LocalRelation <empty>, [value#50]                                              +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#50]
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#50 as string).toString, obj#53: java.lang.String
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#53: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#53: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                                                                      +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0033398 seconds
Total number of effective runs: 3
Total time of effective runs: 6.86E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalLimit 1
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve GlobalLimit 1
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0063025 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#50]
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#55: java.lang.String   'DeserializeToObject upcast(value#50, StringType, - root class: "java.lang.String").toString, obj#55: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                                                                      +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#50, StringType, - root class: "java.lang.String").toString, obj#55: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#55: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                     +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#50 as string).toString, obj#55: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#55: java.lang.String
 +- LocalRelation <empty>, [value#50]                                              +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [value#50]
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#50 as string).toString, obj#55: java.lang.String
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#55: java.lang.String   DeserializeToObject cast(value#50 as string).toString, obj#55: java.lang.String
 +- LocalRelation <empty>, [value#50]                                                                                                                                      +- LocalRelation <empty>, [value#50]

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.005006 seconds
Total number of effective runs: 3
Total time of effective runs: 5.982E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
    +- Filter (length(trim(value#50, None)) > 0)      +- Filter (length(trim(value#50, None)) > 0)
       +- Project [value#43 AS value#50]                 +- Project [value#43 AS value#50]
!         +- Project [value#43]                             +- Relation [value#43] text
!            +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Union ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
    +- Filter (length(trim(value#50, None)) > 0)      +- Filter (length(trim(value#50, None)) > 0)
       +- Project [value#43 AS value#50]                 +- Project [value#43 AS value#50]
!         +- Project [value#43]                             +- Relation [value#43] text
!            +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
!   +- Filter (length(trim(value#50, None)) > 0)      +- Project [value#43 AS value#50]
!      +- Project [value#43 AS value#50]                 +- Filter (length(trim(value#43, None)) > 0)
          +- Relation [value#43] text                       +- Relation [value#43] text

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveRedundantAliases ===
 GlobalLimit 1                                        GlobalLimit 1
 +- LocalLimit 1                                      +- LocalLimit 1
!   +- Project [value#43 AS value#50]                    +- Project [value#43]
       +- Filter (length(trim(value#43, None)) > 0)         +- Filter (length(trim(value#43, None)) > 0)
          +- Relation [value#43] text                          +- Relation [value#43] text

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 GlobalLimit 1                                        GlobalLimit 1
 +- LocalLimit 1                                      +- LocalLimit 1
!   +- Project [value#43]                                +- Filter (length(trim(value#43, None)) > 0)
!      +- Filter (length(trim(value#43, None)) > 0)         +- Relation [value#43] text
!         +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
!   +- Filter (length(trim(value#50, None)) > 0)      +- Filter (length(trim(value#43, None)) > 0)
!      +- Project [value#43 AS value#50]                 +- Relation [value#43] text
!         +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 243
Total time: 0.0060905 seconds
Total number of effective runs: 4
Total time of effective runs: 8.397E-4 seconds

25/02/13 17:21:15 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:15 INFO FileSourceStrategy: Post-Scan Filters: (length(trim(value#43, None)) > 0)
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 CollectLimit 1                                                                                                                                                                                                                                                                                              CollectLimit 1
!+- Filter (length(trim(value#43, None)) > 0)                                                                                                                                                                                                                                                                +- *(1) Filter (length(trim(value#43, None)) > 0)
    +- FileScan text [value#43] Batched: false, DataFilters: [(length(trim(value#43, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>      +- FileScan text [value#43] Batched: false, DataFilters: [(length(trim(value#43, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Preparations ===
 CollectLimit 1                                                                                                                                                                                                                                                                                              CollectLimit 1
!+- Filter (length(trim(value#43, None)) > 0)                                                                                                                                                                                                                                                                +- *(1) Filter (length(trim(value#43, None)) > 0)
    +- FileScan text [value#43] Batched: false, DataFilters: [(length(trim(value#43, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>      +- FileScan text [value#43] Batched: false, DataFilters: [(length(trim(value#43, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>

25/02/13 17:21:15 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.84E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 DEBUG WholeStageCodegenExec:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 030 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (inputadapter_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = inputadapter_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (inputadapter_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_3
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_3
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_3
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 200.1 KiB, free 433.7 MiB)
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_3 locally took 7 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_3
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_3 without replication took 8 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_3_piece0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_3_piece0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_3_piece0
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 34.5 KiB, free 433.7 MiB)
25/02/13 17:21:15 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_3_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:15 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on hy80:50377 (size: 34.5 KiB, free: 434.3 MiB)
25/02/13 17:21:15 DEBUG BlockManagerMaster: Updated info of block broadcast_3_piece0
25/02/13 17:21:15 DEBUG BlockManager: Told master about block broadcast_3_piece0
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_3_piece0 locally took 1 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_3_piece0
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_3_piece0 without replication took 2 ms
25/02/13 17:21:15 INFO SparkContext: Created broadcast 3 from csv at <unknown>:0
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:15 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(0)
25/02/13 17:21:15 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning broadcast 0
25/02/13 17:21:15 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 0
25/02/13 17:21:15 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: removing broadcast 0
25/02/13 17:21:15 DEBUG BlockManager: Removing broadcast 0
25/02/13 17:21:15 DEBUG BlockManager: Removing block broadcast_0_piece0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0_piece0
25/02/13 17:21:15 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$executeTake$2
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0_piece0
25/02/13 17:21:15 DEBUG MemoryStore: Block broadcast_0_piece0 of size 35330 dropped from memory (free 454815994)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_0_piece0
25/02/13 17:21:15 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_0_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:15 INFO BlockManagerInfo: Removed broadcast_0_piece0 on hy80:50377 in memory (size: 34.5 KiB, free: 434.3 MiB)
25/02/13 17:21:15 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$executeTake$2) is now cleaned +++
25/02/13 17:21:15 DEBUG BlockManagerMaster: Updated info of block broadcast_0_piece0
25/02/13 17:21:15 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$runJob$5
25/02/13 17:21:15 DEBUG BlockManager: Told master about block broadcast_0_piece0
25/02/13 17:21:15 DEBUG BlockManager: Removing block broadcast_0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_0
25/02/13 17:21:15 DEBUG MemoryStore: Block broadcast_0 of size 204920 dropped from memory (free 455020914)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_0
25/02/13 17:21:15 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$runJob$5) is now cleaned +++
25/02/13 17:21:15 INFO SparkContext: Starting job: csv at <unknown>:0
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 0, response is 0
25/02/13 17:21:15 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 13 took 0.000123 seconds
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:15 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned broadcast 0
25/02/13 17:21:15 INFO DAGScheduler: Got job 1 (csv at <unknown>:0) with 1 output partitions
25/02/13 17:21:15 INFO DAGScheduler: Final stage: ResultStage 1 (csv at <unknown>:0)
25/02/13 17:21:15 INFO DAGScheduler: Parents of final stage: List()
25/02/13 17:21:15 INFO DAGScheduler: Missing parents: List()
25/02/13 17:21:15 DEBUG DAGScheduler: submitStage(ResultStage 1 (name=csv at <unknown>:0;jobs=1))
25/02/13 17:21:15 DEBUG DAGScheduler: missing: List()
25/02/13 17:21:15 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[13] at csv at <unknown>:0), which has no missing parents
25/02/13 17:21:15 DEBUG DAGScheduler: submitMissingTasks(ResultStage 1)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_4
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_4
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_4
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 13.5 KiB, free 433.9 MiB)
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_4 locally took 6 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_4
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_4 without replication took 6 ms
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(63)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 63
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_4_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 63
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(2)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_4_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning broadcast 2
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_4_piece0
25/02/13 17:21:15 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 2
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 6.4 KiB, free 433.9 MiB)
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: removing broadcast 2
25/02/13 17:21:15 DEBUG BlockManager: Removing broadcast 2
25/02/13 17:21:15 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_4_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:15 DEBUG BlockManager: Removing block broadcast_2_piece0
25/02/13 17:21:15 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on hy80:50377 (size: 6.4 KiB, free: 434.3 MiB)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_2_piece0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_2_piece0
25/02/13 17:21:15 DEBUG BlockManagerMaster: Updated info of block broadcast_4_piece0
25/02/13 17:21:15 DEBUG BlockManager: Told master about block broadcast_4_piece0
25/02/13 17:21:15 DEBUG MemoryStore: Block broadcast_2_piece0 of size 35330 dropped from memory (free 455035915)
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_4_piece0 locally took 9 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_2_piece0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_4_piece0
25/02/13 17:21:15 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_2_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_4_piece0 without replication took 11 ms
25/02/13 17:21:15 INFO BlockManagerInfo: Removed broadcast_2_piece0 on hy80:50377 in memory (size: 34.5 KiB, free: 434.4 MiB)
25/02/13 17:21:15 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1585
25/02/13 17:21:15 DEBUG BlockManagerMaster: Updated info of block broadcast_2_piece0
25/02/13 17:21:15 DEBUG BlockManager: Told master about block broadcast_2_piece0
25/02/13 17:21:15 DEBUG BlockManager: Removing block broadcast_2
25/02/13 17:21:15 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[13] at csv at <unknown>:0) (first 15 tasks are for partitions Vector(0))
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_2
25/02/13 17:21:15 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_2
25/02/13 17:21:15 DEBUG TaskSetManager: Epoch for TaskSet 1.0: 0
25/02/13 17:21:15 DEBUG MemoryStore: Block broadcast_2 of size 204920 dropped from memory (free 455240835)
25/02/13 17:21:15 DEBUG TaskSetManager: Adding pending tasks took 0 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_2
25/02/13 17:21:15 DEBUG TaskSetManager: Valid locality levels for TaskSet 1.0: NO_PREF, ANY
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 2, response is 0
25/02/13 17:21:15 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_1.0, runningTasks: 0
25/02/13 17:21:15 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:15 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (hy80, executor driver, partition 0, PROCESS_LOCAL, 9646 bytes)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned broadcast 2
25/02/13 17:21:15 DEBUG TaskSetManager: No tasks for locality level NO_PREF, so moving to locality level ANY
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(65)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 65
25/02/13 17:21:15 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 65
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(62)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 62
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 62
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(64)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 64
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 64
25/02/13 17:21:15 DEBUG ExecutorMetricsPoller: stageTCMP: (1, 0) -> 1
25/02/13 17:21:15 DEBUG BlockManager: Getting local block broadcast_4
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 trying to acquire read lock for broadcast_4
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 acquired read lock for broadcast_4
25/02/13 17:21:15 DEBUG BlockManager: Level for block broadcast_4 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:15 INFO FileScanRDD: Reading File path: file:///C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv, range: 0-267845, partition values: [empty row]
25/02/13 17:21:15 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.0E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 DEBUG GenerateUnsafeProjection: code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

25/02/13 17:21:15 DEBUG BlockManager: Getting local block broadcast_3
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 trying to acquire read lock for broadcast_3
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 acquired read lock for broadcast_3
25/02/13 17:21:15 DEBUG BlockManager: Level for block broadcast_3 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 releasing lock for broadcast_3
25/02/13 17:21:15 TRACE BlockInfoManager: Task 1 releasing lock for broadcast_4
25/02/13 17:21:15 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 1775 bytes result sent to driver
25/02/13 17:21:15 DEBUG ExecutorMetricsPoller: stageTCMP: (1, 0) -> 0
25/02/13 17:21:15 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 37 ms on hy80 (executor driver) (1/1)
25/02/13 17:21:15 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
25/02/13 17:21:15 INFO DAGScheduler: ResultStage 1 (csv at <unknown>:0) finished in 0.079 s
25/02/13 17:21:15 DEBUG DAGScheduler: After removal of stage 1, remaining stages = 0
25/02/13 17:21:15 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
25/02/13 17:21:15 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage finished
25/02/13 17:21:15 INFO DAGScheduler: Job 1 finished: csv at <unknown>:0, took 0.086189 s
25/02/13 17:21:15 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 8.35E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:15 DEBUG GenerateSafeProjection: code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */       isNull_0 = false;
/* 030 */       if (!isNull_0) {
/* 031 */
/* 032 */         Object funcResult_0 = null;
/* 033 */         funcResult_0 = value_1.toString();
/* 034 */         value_0 = (java.lang.String) funcResult_0;
/* 035 */
/* 036 */       }
/* 037 */     }
/* 038 */     if (isNull_0) {
/* 039 */       mutableRow.setNullAt(0);
/* 040 */     } else {
/* 041 */
/* 042 */       mutableRow.update(0, value_0);
/* 043 */     }
/* 044 */
/* 045 */     return mutableRow;
/* 046 */   }
/* 047 */
/* 048 */
/* 049 */ }

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#58: java.lang.String   'DeserializeToObject upcast(value#43, StringType, - root class: "java.lang.String").toString, obj#58: java.lang.String
 +- Project [value#43]                                                                                                                                                     +- Project [value#43]
    +- Relation [value#43] text                                                                                                                                               +- Relation [value#43] text

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveUpCast ===
!'DeserializeToObject upcast(value#43, StringType, - root class: "java.lang.String").toString, obj#58: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
 +- Project [value#43]                                                                                                    +- Project [value#43]
    +- Relation [value#43] text                                                                                              +- Relation [value#43] text

25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
 +- Project [value#43]                                                             +- Project [value#43]
    +- Relation [value#43] text                                                       +- Relation [value#43] text

25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#58: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
 +- Project [value#43]                                                                                                                                                     +- Project [value#43]
    +- Relation [value#43] text                                                                                                                                               +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0031903 seconds
Total number of effective runs: 3
Total time of effective runs: 6.926E-4 seconds

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.RemoveNoopOperators ===
 DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
!+- Project [value#43]                                                             +- Relation [value#43] text
!   +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Union ===
 DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String   DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String
!+- Project [value#43]                                                             +- Relation [value#43] text
!   +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.SimplifyCasts ===
!DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String   DeserializeToObject value#43.toString, obj#58: java.lang.String
 +- Relation [value#43] text                                                       +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 2 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#43 as string).toString, obj#58: java.lang.String   DeserializeToObject value#43.toString, obj#58: java.lang.String
 +- Relation [value#43] text                                                       +- Relation [value#43] text

25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:15 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 243
Total time: 0.0039125 seconds
Total number of effective runs: 2
Total time of effective runs: 2.824E-4 seconds

25/02/13 17:21:15 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:15 INFO FileSourceStrategy: Post-Scan Filters:
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Preparations has no effect.
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_5
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_5
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_5
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 200.1 KiB, free 434.0 MiB)
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_5 locally took 2 ms
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_5
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_5 without replication took 2 ms
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(114)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 114
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 114
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(102)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 102
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 102
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(116)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 116
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 116
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(123)
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to put broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 123
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 123
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(117)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 117
25/02/13 17:21:15 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 34.5 KiB, free 433.9 MiB)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 117
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(106)
25/02/13 17:21:15 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_5_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 106
25/02/13 17:21:15 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on hy80:50377 (size: 34.5 KiB, free: 434.3 MiB)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 106
25/02/13 17:21:15 DEBUG BlockManagerMaster: Updated info of block broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(105)
25/02/13 17:21:15 DEBUG BlockManager: Told master about block broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 105
25/02/13 17:21:15 DEBUG BlockManager: Put block broadcast_5_piece0 locally took 11 ms
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 105
25/02/13 17:21:15 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_5_piece0
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(96)
25/02/13 17:21:15 DEBUG BlockManager: Putting block broadcast_5_piece0 without replication took 13 ms
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 96
25/02/13 17:21:15 INFO SparkContext: Created broadcast 5 from csv at <unknown>:0
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 96
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(94)
25/02/13 17:21:15 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 94
25/02/13 17:21:15 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 94
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(125)
25/02/13 17:21:15 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 125
25/02/13 17:21:15 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$rdd$1
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 125
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(111)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 111
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 111
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(93)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 93
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 93
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(104)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 104
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 104
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(122)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 122
25/02/13 17:21:15 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$rdd$1) is now cleaned +++
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 122
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(98)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 98
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 98
25/02/13 17:21:15 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$inferFromDataset$2
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(115)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 115
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 115
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(109)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 109
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 109
25/02/13 17:21:15 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$inferFromDataset$2) is now cleaned +++
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(120)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 120
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 120
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(124)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 124
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 124
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(118)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 118
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 118
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(92)
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 92
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 92
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(113)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 113
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 113
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(119)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 119
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 119
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(107)
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 107
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 107
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(108)
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 108
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 108
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(99)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 99
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 99
25/02/13 17:21:15 TRACE Analyzer$ResolveReferences: Attempting to resolve Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(101)
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 101
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 101
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(112)
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 112
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 112
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(95)
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 95
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaned accumulator 95
25/02/13 17:21:15 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:15 DEBUG ContextCleaner: Got cleaning task CleanAccum(121)
25/02/13 17:21:15 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:15 DEBUG ContextCleaner: Cleaning accumulator 121
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 121
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanAccum(126)
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning accumulator 126
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 126
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanAccum(103)
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning accumulator 103
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 103
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(4)
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning broadcast 4
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:16 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 4
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:16 DEBUG BlockManagerStorageEndpoint: removing broadcast 4
25/02/13 17:21:16 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:16 DEBUG BlockManager: Removing broadcast 4
25/02/13 17:21:16 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:16 DEBUG BlockManager: Removing block broadcast_4_piece0
25/02/13 17:21:16 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.002006 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_4_piece0
25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_4_piece0
25/02/13 17:21:16 DEBUG MemoryStore: Block broadcast_4_piece0 of size 6537 dropped from memory (free 455007122)
25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_4_piece0
25/02/13 17:21:16 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_4_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:16 INFO BlockManagerInfo: Removed broadcast_4_piece0 on hy80:50377 in memory (size: 6.4 KiB, free: 434.3 MiB)
25/02/13 17:21:16 DEBUG BlockManagerMaster: Updated info of block broadcast_4_piece0
25/02/13 17:21:16 DEBUG BlockManager: Told master about block broadcast_4_piece0
>>> 25/02/13 17:21:16 DEBUG BlockManager: Removing block broadcast_4
25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_4
25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_4
25/02/13 17:21:16 DEBUG MemoryStore: Block broadcast_4 of size 13792 dropped from memory (free 455020914)
25/02/13 17:21:16 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_4
25/02/13 17:21:16 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 4, response is 0
25/02/13 17:21:16 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned broadcast 4
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanAccum(100)
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning accumulator 100
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 100
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanAccum(97)
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning accumulator 97
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 97
25/02/13 17:21:16 DEBUG ContextCleaner: Got cleaning task CleanAccum(110)
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaning accumulator 110
25/02/13 17:21:16 DEBUG ContextCleaner: Cleaned accumulator 110

>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> 25/02/13 17:21:22 DEBUG ExecutorMetricsPoller: removing (1, 0) from stageTCMP
df.rdd.getNumPartitions()
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Union has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:32 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 188
Total time: 0.0025763 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:32 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:32 INFO FileSourceStrategy: Post-Scan Filters:
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Preparations has no effect.
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to put broadcast_6
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_6
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_6
25/02/13 17:21:32 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 200.0 KiB, free 433.7 MiB)
25/02/13 17:21:32 DEBUG BlockManager: Put block broadcast_6 locally took 2 ms
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_6
25/02/13 17:21:32 DEBUG BlockManager: Putting block broadcast_6 without replication took 2 ms
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(85)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 85
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 85
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(88)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 88
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 88
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(73)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 73
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to put broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 73
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(78)
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 78
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 78
25/02/13 17:21:32 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 34.4 KiB, free 433.7 MiB)
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(68)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 68
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 68
25/02/13 17:21:32 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_6_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(76)
25/02/13 17:21:32 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on hy80:50377 (size: 34.4 KiB, free: 434.3 MiB)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 76
25/02/13 17:21:32 DEBUG BlockManagerMaster: Updated info of block broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 76
25/02/13 17:21:32 DEBUG BlockManager: Told master about block broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(82)
25/02/13 17:21:32 DEBUG BlockManager: Put block broadcast_6_piece0 locally took 10 ms
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 82
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_6_piece0
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 82
25/02/13 17:21:32 DEBUG BlockManager: Putting block broadcast_6_piece0 without replication took 13 ms
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(72)
25/02/13 17:21:32 INFO SparkContext: Created broadcast 6 from javaToPython at <unknown>:0
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 72
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 72
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(74)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 74
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 74
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(86)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 86
25/02/13 17:21:32 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 86
25/02/13 17:21:32 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(129)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 129
25/02/13 17:21:32 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 129
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(89)
25/02/13 17:21:32 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 89
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 89
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(79)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 79
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 79
25/02/13 17:21:32 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$javaToPython$1
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(80)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 80
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 80
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(128)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 128
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 128
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(67)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 67
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 67
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(91)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 91
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 91
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(77)
25/02/13 17:21:32 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$javaToPython$1) is now cleaned +++
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 77
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 77
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(70)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 70
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 70
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(71)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 71
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 71
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(84)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 84
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 84
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(83)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 83
25/02/13 17:21:32 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$javaToPython$1
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 83
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(90)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 90
25/02/13 17:21:32 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$javaToPython$1) is now cleaned +++
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 90
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(66)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 66
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 66
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(130)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 130
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 130
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(5)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning broadcast 5
25/02/13 17:21:32 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 5
1
25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: removing broadcast 5
25/02/13 17:21:32 DEBUG BlockManager: Removing broadcast 5
>>> 25/02/13 17:21:32 DEBUG BlockManager: Removing block broadcast_5_piece0
df = df.repartition(5)
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_5_piece0
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_5_piece0
25/02/13 17:21:32 DEBUG MemoryStore: Block broadcast_5_piece0 of size 35330 dropped from memory (free 454816153)
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_5_piece0
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:32 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_5_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:32 INFO BlockManagerInfo: Removed broadcast_5_piece0 on hy80:50377 in memory (size: 34.5 KiB, free: 434.3 MiB)
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:32 DEBUG BlockManagerMaster: Updated info of block broadcast_5_piece0
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:32 DEBUG BlockManager: Told master about block broadcast_5_piece0
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:32 DEBUG BlockManager: Removing block broadcast_5
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_5
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_5
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:32 DEBUG MemoryStore: Block broadcast_5 of size 204920 dropped from memory (free 455021073)
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_5
25/02/13 17:21:32 TRACE Analyzer$ResolveReferences: Attempting to resolve Repartition 5, true
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 5, response is 0
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned broadcast 5
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(81)
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 81
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 81
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(69)
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 69
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 69
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(87)
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 87
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 87
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(127)
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 127
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 127
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(3)
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning broadcast 3
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:32 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 3
25/02/13 17:21:32 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:32 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:32 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.001935 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: removing broadcast 3
25/02/13 17:21:32 DEBUG BlockManager: Removing broadcast 3
25/02/13 17:21:32 DEBUG BlockManager: Removing block broadcast_3
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_3
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_3
>>> 25/02/13 17:21:32 DEBUG MemoryStore: Block broadcast_3 of size 204920 dropped from memory (free 455225993)
df.rdd.getNumPartitions()25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_3
25/02/13 17:21:32 DEBUG BlockManager: Removing block broadcast_3_piece0
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_3_piece0
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_3_piece0
25/02/13 17:21:32 DEBUG MemoryStore: Block broadcast_3_piece0 of size 35330 dropped from memory (free 455261323)
25/02/13 17:21:32 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_3_piece0
25/02/13 17:21:32 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_3_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:32 INFO BlockManagerInfo: Removed broadcast_3_piece0 on hy80:50377 in memory (size: 34.5 KiB, free: 434.4 MiB)
25/02/13 17:21:32 DEBUG BlockManagerMaster: Updated info of block broadcast_3_piece0
25/02/13 17:21:32 DEBUG BlockManager: Told master about block broadcast_3_piece0
25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 3, response is 0
25/02/13 17:21:32 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned broadcast 3
25/02/13 17:21:32 DEBUG ContextCleaner: Got cleaning task CleanAccum(75)
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaning accumulator 75
25/02/13 17:21:32 DEBUG ContextCleaner: Cleaned accumulator 75

25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Union has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Operator Optimization before Inferring Filters has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer Filters after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Infer Filters has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:33 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:33 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 188
Total time: 0.0023064 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:33 INFO FileSourceStrategy: Pushed Filters:
25/02/13 17:21:33 INFO FileSourceStrategy: Post-Scan Filters:
25/02/13 17:21:33 DEBUG InsertAdaptiveSparkPlan: Adaptive execution enabled for plan: Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=47]
+- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:33 TRACE PlanChangeLogger: Batch AQE Query Post Planner Strategy Rules has no effect.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch AQE Preparations has no effect.
25/02/13 17:21:33 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_iddaptiveSparkPlan isFinalPlan=false
!+- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=47]
ileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:33 TRACE PlanChangeLogger:
=== Result of Batch Preparations ===
!Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_iddaptiveSparkPlan isFinalPlan=false
!+- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=47]
!                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:33 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
25/02/13 17:21:33 TRACE PlanChangeLogger: Batch AQE Post Stage Creation has no effect.
25/02/13 17:21:33 DEBUG ShuffleQueryStageExec: Materialize query stage ShuffleQueryStageExec: 0
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 trying to put broadcast_7
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_7
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_7
25/02/13 17:21:33 INFO MemoryStore: Block broadcast_7 stored as values in memory (estimated size 200.0 KiB, free 434.0 MiB)
25/02/13 17:21:33 DEBUG BlockManager: Put block broadcast_7 locally took 1 ms
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_7
25/02/13 17:21:33 DEBUG BlockManager: Putting block broadcast_7 without replication took 2 ms
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 trying to put broadcast_7_piece0
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_7_piece0
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_7_piece0
25/02/13 17:21:33 INFO MemoryStore: Block broadcast_7_piece0 stored as bytes in memory (estimated size 34.4 KiB, free 433.9 MiB)
25/02/13 17:21:33 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_7_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:33 INFO BlockManagerInfo: Added broadcast_7_piece0 in memory on hy80:50377 (size: 34.4 KiB, free: 434.3 MiB)
25/02/13 17:21:33 DEBUG BlockManagerMaster: Updated info of block broadcast_7_piece0
25/02/13 17:21:33 DEBUG BlockManager: Told master about block broadcast_7_piece0
25/02/13 17:21:33 DEBUG BlockManager: Put block broadcast_7_piece0 locally took 3 ms
25/02/13 17:21:33 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_7_piece0
25/02/13 17:21:33 DEBUG BlockManager: Putting block broadcast_7_piece0 without replication took 4 ms
25/02/13 17:21:33 INFO SparkContext: Created broadcast 7 from javaToPython at <unknown>:0
25/02/13 17:21:33 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:33 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:33 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:33 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:33 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 28 took 0.000064 seconds
25/02/13 17:21:33 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:33 INFO DAGScheduler: Registering RDD 28 (javaToPython at <unknown>:0) as input to shuffle 0
25/02/13 17:21:34 INFO DAGScheduler: Got map stage job 2 (javaToPython at <unknown>:0) with 1 output partitions
25/02/13 17:21:34 INFO DAGScheduler: Final stage: ShuffleMapStage 2 (javaToPython at <unknown>:0)
25/02/13 17:21:34 INFO DAGScheduler: Parents of final stage: List()
25/02/13 17:21:34 INFO DAGScheduler: Missing parents: List()
25/02/13 17:21:34 DEBUG DAGScheduler: submitStage(ShuffleMapStage 2 (name=javaToPython at <unknown>:0;jobs=2))
25/02/13 17:21:34 DEBUG DAGScheduler: missing: List()
25/02/13 17:21:34 INFO DAGScheduler: Submitting ShuffleMapStage 2 (MapPartitionsRDD[28] at javaToPython at <unknown>:0), which has no missing parents
25/02/13 17:21:34 DEBUG DAGScheduler: submitMissingTasks(ShuffleMapStage 2)
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 trying to put broadcast_8
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_8
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_8
25/02/13 17:21:34 INFO MemoryStore: Block broadcast_8 stored as values in memory (estimated size 16.3 KiB, free 433.9 MiB)
25/02/13 17:21:34 DEBUG BlockManager: Put block broadcast_8 locally took 1 ms
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_8
25/02/13 17:21:34 DEBUG BlockManager: Putting block broadcast_8 without replication took 1 ms
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 trying to put broadcast_8_piece0
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_8_piece0
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_8_piece0
25/02/13 17:21:34 INFO MemoryStore: Block broadcast_8_piece0 stored as bytes in memory (estimated size 8.0 KiB, free 433.9 MiB)
25/02/13 17:21:34 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_8_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:34 INFO BlockManagerInfo: Added broadcast_8_piece0 in memory on hy80:50377 (size: 8.0 KiB, free: 434.3 MiB)
25/02/13 17:21:34 DEBUG BlockManagerMaster: Updated info of block broadcast_8_piece0
25/02/13 17:21:34 DEBUG BlockManager: Told master about block broadcast_8_piece0
25/02/13 17:21:34 DEBUG BlockManager: Put block broadcast_8_piece0 locally took 2 ms
25/02/13 17:21:34 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_8_piece0
25/02/13 17:21:34 DEBUG BlockManager: Putting block broadcast_8_piece0 without replication took 3 ms
25/02/13 17:21:34 INFO SparkContext: Created broadcast 8 from broadcast at DAGScheduler.scala:1585
25/02/13 17:21:34 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 2 (MapPartitionsRDD[28] at javaToPython at <unknown>:0) (first 15 tasks are for partitions Vector(0))
25/02/13 17:21:34 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
25/02/13 17:21:34 DEBUG TaskSetManager: Epoch for TaskSet 2.0: 0
25/02/13 17:21:34 DEBUG TaskSetManager: Adding pending tasks took 0 ms
25/02/13 17:21:34 DEBUG TaskSetManager: Valid locality levels for TaskSet 2.0: NO_PREF, ANY
25/02/13 17:21:34 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_2.0, runningTasks: 0
25/02/13 17:21:34 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (hy80, executor driver, partition 0, PROCESS_LOCAL, 9635 bytes)
25/02/13 17:21:34 DEBUG TaskSetManager: No tasks for locality level NO_PREF, so moving to locality level ANY
25/02/13 17:21:34 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
25/02/13 17:21:34 DEBUG ExecutorMetricsPoller: stageTCMP: (2, 0) -> 1
25/02/13 17:21:34 DEBUG BlockManager: Getting local block broadcast_8
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 trying to acquire read lock for broadcast_8
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 acquired read lock for broadcast_8
25/02/13 17:21:34 DEBUG BlockManager: Level for block broadcast_8 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:34 DEBUG TaskMemoryManager: Task 2 acquired 64.0 KiB for org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@2b980c92
25/02/13 17:21:34 TRACE TaskMemoryManager: Allocate page number 0 (65536 bytes)
25/02/13 17:21:34 INFO FileScanRDD: Reading File path: file:///C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv, range: 0-267845, partition values: [empty row]
25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.5E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.8E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 4.2E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 4.0E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.7E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 9.4E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.58E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.8E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.11E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.36E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 8.9E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.4E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.8E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 DEBUG GenerateUnsafeProjection: code for input[0, string, true],input[1, string, true],input[2, string, true],input[3, string, true],input[4, string, true],input[5, string, true],input[6, string, true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, string, true],input[11, string, true],input[12, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */     writeFields_0_0(i);
/* 031 */     writeFields_0_1(i);
/* 032 */     writeFields_0_2(i);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */   private void writeFields_0_1(InternalRow i) {
/* 038 */
/* 039 */     boolean isNull_5 = i.isNullAt(5);
/* 040 */     UTF8String value_5 = isNull_5 ?
/* 041 */     null : (i.getUTF8String(5));
/* 042 */     if (isNull_5) {
/* 043 */       mutableStateArray_0[0].setNullAt(5);
/* 044 */     } else {
/* 045 */       mutableStateArray_0[0].write(5, value_5);
/* 046 */     }
/* 047 */
/* 048 */     boolean isNull_6 = i.isNullAt(6);
/* 049 */     UTF8String value_6 = isNull_6 ?
/* 050 */     null : (i.getUTF8String(6));
/* 051 */     if (isNull_6) {
/* 052 */       mutableStateArray_0[0].setNullAt(6);
/* 053 */     } else {
/* 054 */       mutableStateArray_0[0].write(6, value_6);
/* 055 */     }
/* 056 */
/* 057 */     boolean isNull_7 = i.isNullAt(7);
/* 058 */     UTF8String value_7 = isNull_7 ?
/* 059 */     null : (i.getUTF8String(7));
/* 060 */     if (isNull_7) {
/* 061 */       mutableStateArray_0[0].setNullAt(7);
/* 062 */     } else {
/* 063 */       mutableStateArray_0[0].write(7, value_7);
/* 064 */     }
/* 065 */
/* 066 */     boolean isNull_8 = i.isNullAt(8);
/* 067 */     UTF8String value_8 = isNull_8 ?
/* 068 */     null : (i.getUTF8String(8));
/* 069 */     if (isNull_8) {
/* 070 */       mutableStateArray_0[0].setNullAt(8);
/* 071 */     } else {
/* 072 */       mutableStateArray_0[0].write(8, value_8);
/* 073 */     }
/* 074 */
/* 075 */     boolean isNull_9 = i.isNullAt(9);
/* 076 */     UTF8String value_9 = isNull_9 ?
/* 077 */     null : (i.getUTF8String(9));
/* 078 */     if (isNull_9) {
/* 079 */       mutableStateArray_0[0].setNullAt(9);
/* 080 */     } else {
/* 081 */       mutableStateArray_0[0].write(9, value_9);
/* 082 */     }
/* 083 */
/* 084 */   }
/* 085 */
/* 086 */
/* 087 */   private void writeFields_0_0(InternalRow i) {
/* 088 */
/* 089 */     boolean isNull_0 = i.isNullAt(0);
/* 090 */     UTF8String value_0 = isNull_0 ?
/* 091 */     null : (i.getUTF8String(0));
/* 092 */     if (isNull_0) {
/* 093 */       mutableStateArray_0[0].setNullAt(0);
/* 094 */     } else {
/* 095 */       mutableStateArray_0[0].write(0, value_0);
/* 096 */     }
/* 097 */
/* 098 */     boolean isNull_1 = i.isNullAt(1);
/* 099 */     UTF8String value_1 = isNull_1 ?
/* 100 */     null : (i.getUTF8String(1));
/* 101 */     if (isNull_1) {
/* 102 */       mutableStateArray_0[0].setNullAt(1);
/* 103 */     } else {
/* 104 */       mutableStateArray_0[0].write(1, value_1);
/* 105 */     }
/* 106 */
/* 107 */     boolean isNull_2 = i.isNullAt(2);
/* 108 */     UTF8String value_2 = isNull_2 ?
/* 109 */     null : (i.getUTF8String(2));
/* 110 */     if (isNull_2) {
/* 111 */       mutableStateArray_0[0].setNullAt(2);
/* 112 */     } else {
/* 113 */       mutableStateArray_0[0].write(2, value_2);
/* 114 */     }
/* 115 */
/* 116 */     boolean isNull_3 = i.isNullAt(3);
/* 117 */     UTF8String value_3 = isNull_3 ?
/* 118 */     null : (i.getUTF8String(3));
/* 119 */     if (isNull_3) {
/* 120 */       mutableStateArray_0[0].setNullAt(3);
/* 121 */     } else {
/* 122 */       mutableStateArray_0[0].write(3, value_3);
/* 123 */     }
/* 124 */
/* 125 */     boolean isNull_4 = i.isNullAt(4);
/* 126 */     UTF8String value_4 = isNull_4 ?
/* 127 */     null : (i.getUTF8String(4));
/* 128 */     if (isNull_4) {
/* 129 */       mutableStateArray_0[0].setNullAt(4);
/* 130 */     } else {
/* 131 */       mutableStateArray_0[0].write(4, value_4);
/* 132 */     }
/* 133 */
/* 134 */   }
/* 135 */
/* 136 */
/* 137 */   private void writeFields_0_2(InternalRow i) {
/* 138 */
/* 139 */     boolean isNull_10 = i.isNullAt(10);
/* 140 */     UTF8String value_10 = isNull_10 ?
/* 141 */     null : (i.getUTF8String(10));
/* 142 */     if (isNull_10) {
/* 143 */       mutableStateArray_0[0].setNullAt(10);
/* 144 */     } else {
/* 145 */       mutableStateArray_0[0].write(10, value_10);
/* 146 */     }
/* 147 */
/* 148 */     boolean isNull_11 = i.isNullAt(11);
/* 149 */     UTF8String value_11 = isNull_11 ?
/* 150 */     null : (i.getUTF8String(11));
/* 151 */     if (isNull_11) {
/* 152 */       mutableStateArray_0[0].setNullAt(11);
/* 153 */     } else {
/* 154 */       mutableStateArray_0[0].write(11, value_11);
/* 155 */     }
/* 156 */
/* 157 */     boolean isNull_12 = i.isNullAt(12);
/* 158 */     UTF8String value_12 = isNull_12 ?
/* 159 */     null : (i.getUTF8String(12));
/* 160 */     if (isNull_12) {
/* 161 */       mutableStateArray_0[0].setNullAt(12);
/* 162 */     } else {
/* 163 */       mutableStateArray_0[0].write(12, value_12);
/* 164 */     }
/* 165 */
/* 166 */   }
/* 167 */
/* 168 */ }

25/02/13 17:21:34 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */     writeFields_0_0(i);
/* 031 */     writeFields_0_1(i);
/* 032 */     writeFields_0_2(i);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */   private void writeFields_0_1(InternalRow i) {
/* 038 */
/* 039 */     boolean isNull_5 = i.isNullAt(5);
/* 040 */     UTF8String value_5 = isNull_5 ?
/* 041 */     null : (i.getUTF8String(5));
/* 042 */     if (isNull_5) {
/* 043 */       mutableStateArray_0[0].setNullAt(5);
/* 044 */     } else {
/* 045 */       mutableStateArray_0[0].write(5, value_5);
/* 046 */     }
/* 047 */
/* 048 */     boolean isNull_6 = i.isNullAt(6);
/* 049 */     UTF8String value_6 = isNull_6 ?
/* 050 */     null : (i.getUTF8String(6));
/* 051 */     if (isNull_6) {
/* 052 */       mutableStateArray_0[0].setNullAt(6);
/* 053 */     } else {
/* 054 */       mutableStateArray_0[0].write(6, value_6);
/* 055 */     }
/* 056 */
/* 057 */     boolean isNull_7 = i.isNullAt(7);
/* 058 */     UTF8String value_7 = isNull_7 ?
/* 059 */     null : (i.getUTF8String(7));
/* 060 */     if (isNull_7) {
/* 061 */       mutableStateArray_0[0].setNullAt(7);
/* 062 */     } else {
/* 063 */       mutableStateArray_0[0].write(7, value_7);
/* 064 */     }
/* 065 */
/* 066 */     boolean isNull_8 = i.isNullAt(8);
/* 067 */     UTF8String value_8 = isNull_8 ?
/* 068 */     null : (i.getUTF8String(8));
/* 069 */     if (isNull_8) {
/* 070 */       mutableStateArray_0[0].setNullAt(8);
/* 071 */     } else {
/* 072 */       mutableStateArray_0[0].write(8, value_8);
/* 073 */     }
/* 074 */
/* 075 */     boolean isNull_9 = i.isNullAt(9);
/* 076 */     UTF8String value_9 = isNull_9 ?
/* 077 */     null : (i.getUTF8String(9));
/* 078 */     if (isNull_9) {
/* 079 */       mutableStateArray_0[0].setNullAt(9);
/* 080 */     } else {
/* 081 */       mutableStateArray_0[0].write(9, value_9);
/* 082 */     }
/* 083 */
/* 084 */   }
/* 085 */
/* 086 */
/* 087 */   private void writeFields_0_0(InternalRow i) {
/* 088 */
/* 089 */     boolean isNull_0 = i.isNullAt(0);
/* 090 */     UTF8String value_0 = isNull_0 ?
/* 091 */     null : (i.getUTF8String(0));
/* 092 */     if (isNull_0) {
/* 093 */       mutableStateArray_0[0].setNullAt(0);
/* 094 */     } else {
/* 095 */       mutableStateArray_0[0].write(0, value_0);
/* 096 */     }
/* 097 */
/* 098 */     boolean isNull_1 = i.isNullAt(1);
/* 099 */     UTF8String value_1 = isNull_1 ?
/* 100 */     null : (i.getUTF8String(1));
/* 101 */     if (isNull_1) {
/* 102 */       mutableStateArray_0[0].setNullAt(1);
/* 103 */     } else {
/* 104 */       mutableStateArray_0[0].write(1, value_1);
/* 105 */     }
/* 106 */
/* 107 */     boolean isNull_2 = i.isNullAt(2);
/* 108 */     UTF8String value_2 = isNull_2 ?
/* 109 */     null : (i.getUTF8String(2));
/* 110 */     if (isNull_2) {
/* 111 */       mutableStateArray_0[0].setNullAt(2);
/* 112 */     } else {
/* 113 */       mutableStateArray_0[0].write(2, value_2);
/* 114 */     }
/* 115 */
/* 116 */     boolean isNull_3 = i.isNullAt(3);
/* 117 */     UTF8String value_3 = isNull_3 ?
/* 118 */     null : (i.getUTF8String(3));
/* 119 */     if (isNull_3) {
/* 120 */       mutableStateArray_0[0].setNullAt(3);
/* 121 */     } else {
/* 122 */       mutableStateArray_0[0].write(3, value_3);
/* 123 */     }
/* 124 */
/* 125 */     boolean isNull_4 = i.isNullAt(4);
/* 126 */     UTF8String value_4 = isNull_4 ?
/* 127 */     null : (i.getUTF8String(4));
/* 128 */     if (isNull_4) {
/* 129 */       mutableStateArray_0[0].setNullAt(4);
/* 130 */     } else {
/* 131 */       mutableStateArray_0[0].write(4, value_4);
/* 132 */     }
/* 133 */
/* 134 */   }
/* 135 */
/* 136 */
/* 137 */   private void writeFields_0_2(InternalRow i) {
/* 138 */
/* 139 */     boolean isNull_10 = i.isNullAt(10);
/* 140 */     UTF8String value_10 = isNull_10 ?
/* 141 */     null : (i.getUTF8String(10));
/* 142 */     if (isNull_10) {
/* 143 */       mutableStateArray_0[0].setNullAt(10);
/* 144 */     } else {
/* 145 */       mutableStateArray_0[0].write(10, value_10);
/* 146 */     }
/* 147 */
/* 148 */     boolean isNull_11 = i.isNullAt(11);
/* 149 */     UTF8String value_11 = isNull_11 ?
/* 150 */     null : (i.getUTF8String(11));
/* 151 */     if (isNull_11) {
/* 152 */       mutableStateArray_0[0].setNullAt(11);
/* 153 */     } else {
/* 154 */       mutableStateArray_0[0].write(11, value_11);
/* 155 */     }
/* 156 */
/* 157 */     boolean isNull_12 = i.isNullAt(12);
/* 158 */     UTF8String value_12 = isNull_12 ?
/* 159 */     null : (i.getUTF8String(12));
/* 160 */     if (isNull_12) {
/* 161 */       mutableStateArray_0[0].setNullAt(12);
/* 162 */     } else {
/* 163 */       mutableStateArray_0[0].write(12, value_12);
/* 164 */     }
/* 165 */
/* 166 */   }
/* 167 */
/* 168 */ }

25/02/13 17:21:34 INFO CodeGenerator: Code generated in 23.395 ms
25/02/13 17:21:34 DEBUG BlockManager: Getting local block broadcast_7
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 trying to acquire read lock for broadcast_7
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 acquired read lock for broadcast_7
25/02/13 17:21:34 DEBUG BlockManager: Level for block broadcast_7 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:34 DEBUG TaskMemoryManager: Task 2 acquired 2048.0 KiB for org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@2b980c92
25/02/13 17:21:34 TRACE TaskMemoryManager: Allocate page number 1 (2097136 bytes)
25/02/13 17:21:34 TRACE TaskMemoryManager: Freed page number 1 (2097136 bytes)
25/02/13 17:21:34 DEBUG TaskMemoryManager: Task 2 release 2048.0 KiB from org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@2b980c92
25/02/13 17:21:34 TRACE TaskMemoryManager: Freed page number 0 (65536 bytes)
25/02/13 17:21:34 DEBUG TaskMemoryManager: Task 2 release 64.0 KiB from org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@2b980c92
25/02/13 17:21:34 DEBUG LocalDiskShuffleMapOutputWriter: Writing shuffle index file for mapId 2 with length 5
25/02/13 17:21:34 DEBUG IndexShuffleBlockResolver: Shuffle index for mapId 2: [61615,62018,61236,61931,61148]
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 releasing lock for broadcast_7
25/02/13 17:21:34 TRACE BlockInfoManager: Task 2 releasing lock for broadcast_8
25/02/13 17:21:34 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 1754 bytes result sent to driver
25/02/13 17:21:34 DEBUG ExecutorMetricsPoller: stageTCMP: (2, 0) -> 0
25/02/13 17:21:34 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 277 ms on hy80 (executor driver) (1/1)
25/02/13 17:21:34 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
25/02/13 17:21:34 DEBUG DAGScheduler: ShuffleMapTask finished on driver
25/02/13 17:21:34 INFO DAGScheduler: ShuffleMapStage 2 (javaToPython at <unknown>:0) finished in 0.322 s
25/02/13 17:21:34 INFO DAGScheduler: looking for newly runnable stages
25/02/13 17:21:34 INFO DAGScheduler: running: Set()
25/02/13 17:21:34 INFO DAGScheduler: waiting: Set()
25/02/13 17:21:34 INFO DAGScheduler: failed: Set()
25/02/13 17:21:34 DEBUG MapOutputTrackerMaster: Increasing epoch to 1
25/02/13 17:21:34 DEBUG DAGScheduler: After removal of stage 2, remaining stages = 0
25/02/13 17:21:34 TRACE DAGScheduler: Checking if any dependencies of ShuffleMapStage 2 are now runnable
25/02/13 17:21:34 TRACE DAGScheduler: running: Set()
25/02/13 17:21:34 TRACE DAGScheduler: waiting: Set()
25/02/13 17:21:34 TRACE DAGScheduler: failed: Set()
25/02/13 17:21:34 TRACE AQEOptimizer: Fixed point reached for batch Propagate Empty Relations after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch Propagate Empty Relations has no effect.
25/02/13 17:21:34 TRACE AQEOptimizer: Fixed point reached for batch Dynamic Join Selection after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch Dynamic Join Selection has no effect.
25/02/13 17:21:34 TRACE AQEOptimizer: Fixed point reached for batch Eliminate Limits after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch Eliminate Limits has no effect.
25/02/13 17:21:34 TRACE AQEOptimizer: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:34 TRACE AQEOptimizer: Fixed point reached for batch User Provided Runtime Optimizers after 1 iterations.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch User Provided Runtime Optimizers has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 6
Total time: 0.0018478 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:34 TRACE PlanChangeLogger: Batch AQE Query Post Planner Strategy Rules has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch AQE Replanning has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
25/02/13 17:21:34 TRACE PlanChangeLogger: Batch AQE Post Stage Creation has no effect.
25/02/13 17:21:34 DEBUG AdaptiveSparkPlanExec: Final plan:
ShuffleQueryStage 0
+- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=47]
   +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:34 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$javaToPython$1
25/02/13 17:21:34 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$javaToPython$1) is now cleaned +++
25/02/13 17:21:34 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$javaToPython$1
25/02/13 17:21:34 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$javaToPython$1) is now cleaned +++
5
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> df2=df.withColumn("Year_Built",df["Year_Built"].cast(IntegerType()))
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:41 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
 Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
 +- Repartition 5, true                                                                                                                                                                                                                                                                                                 +- Repartition 5, true
    +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                      +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
 Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
 +- Repartition 5, true                                                                                                                                                                                                                                                                                                 +- Repartition 5, true
    +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                      +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:41 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.analysis.DetectAmbiguousSelfJoin ===
 Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
 +- Repartition 5, true                                                                                                                                                                                                                                                                                                 +- Repartition 5, true
    +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                      +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:41 TRACE PlanChangeLogger:
=== Result of Batch Post-Hoc Resolution ===
 Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
 +- Repartition 5, true                                                                                                                                                                                                                                                                                                 +- Repartition 5, true
    +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                      +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:41 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:41 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:42 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0041947 seconds
Total number of effective runs: 2
Total time of effective runs: 9.233E-4 seconds

>>> df3=df2.filter(df2.Year_Built >2000)
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:42 TRACE Analyzer$ResolveReferences: Attempting to resolve Filter (Year_Built#112 > 2000)
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:42 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.analysis.DetectAmbiguousSelfJoin ===
 Filter (Year_Built#112 > 2000)                                                                                                                                                                                                                                                                                            Filter (Year_Built#112 > 2000)
 +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
    +- Repartition 5, true                                                                                                                                                                                                                                                                                                    +- Repartition 5, true
       +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                         +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:42 TRACE PlanChangeLogger:
=== Result of Batch Post-Hoc Resolution ===
 Filter (Year_Built#112 > 2000)                                                                                                                                                                                                                                                                                            Filter (Year_Built#112 > 2000)
 +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]   +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
    +- Repartition 5, true                                                                                                                                                                                                                                                                                                    +- Repartition 5, true
       +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv                                         +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:42 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:42 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:42 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.00383 seconds
Total number of effective runs: 1
Total time of effective runs: 1.522E-4 seconds

>>> 25/02/13 17:21:42 DEBUG ExecutorMetricsPoller: removing (2, 0) from stageTCMP

>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> df3.show()
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.ResolveTimeZone ===
!'Project [unresolvedalias(toprettystring(Neighborhood#60, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Building.Classification#61, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Total.Units#62, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Year_Built#112, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.SqFt#64, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Gross.Income#65, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.Income.per.SqFt#66, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Expense#67, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Expense.per.SqFt#68, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Net.Operating.Income#69, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Full.Market.Value#70, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Market.Value.per.SqFt#71, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Boro#72, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc))]   'Project [unresolvedalias(toprettystring(Neighborhood#60, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Building.Classification#61, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Total.Units#62, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Year_Built#112, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.SqFt#64, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Gross.Income#65, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Expense#67, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Expense.per.SqFt#68, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Net.Operating.Income#69, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Full.Market.Value#70, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Boro#72, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc))]
 +- Filter (Year_Builtilter (Year_Built#112 > 2000)
    +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Bororoject [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
       +- Repartition 5, trueepartition 5, true
          +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveAliases ===
!'Project [unresolvedalias(toprettystring(Neighborhood#60, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Building.Classification#61, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Total.Units#62, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Year_Built#112, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.SqFt#64, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Gross.Income#65, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Expense#67, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Expense.per.SqFt#68, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Net.Operating.Income#69, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Full.Market.Value#70, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Boro#72, Some(America/New_York)), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc))]   Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
 +- Filter (Year_Builtilter (Year_Built#112 > 2000)
    +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
       +- Repartition 5, trueepartition 5, true
          +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 3 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'Project [unresolvedalias(toprettystring(Neighborhood#60, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Building.Classification#61, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Total.Units#62, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Year_Built#112, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.SqFt#64, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Gross.Income#65, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Gross.Income.per.SqFt#66, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Estimated.Expense#67, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Expense.per.SqFt#68, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Net.Operating.Income#69, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Full.Market.Value#70, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Market.Value.per.SqFt#71, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc)), unresolvedalias(toprettystring(Boro#72, None), Some(org.apache.spark.sql.Column$$Lambda$3290/0x00000008018db5f8@2a4fb3fc))]   Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
 +- Filter (Year_Builtilter (Year_Built#112 > 2000)
    +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Bororoject [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
       +- Repartition 5, trueepartition 5, true
          +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 197
Total time: 0.0130214 seconds
Total number of effective runs: 2
Total time of effective runs: 0.0054025 seconds

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:49 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalLimit 21
25/02/13 17:21:49 TRACE Analyzer$ResolveReferences: Attempting to resolve GlobalLimit 21
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Resolution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 87
Total time: 0.0092227 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Finish Analysis after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Finish Analysis has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Distinct after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Eliminate Distinct has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Inline CTE after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Inline CTE has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Union after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Union has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation early after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch LocalRelation early has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pullup Correlated Expressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Pullup Correlated Expressions has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace Operators after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Replace Operators has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Aggregate after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Aggregate has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.PushDownPredicates ===
 GlobalLimitlobalLimit 21
 +- LocalLimitocalLimit 21
    +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]      +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!      +- Filter (Year_Builtroject [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
!         +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boroepartition 5, true
!            +- Repartition 5, trueilter (cast(Year_Built#63 as int) > 2000)
                +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.CollapseProject ===
 GlobalLimitlobalLimit 21
 +- LocalLimitocalLimit 21
!   +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]      +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    +- Repartition 5, true
!         +- Repartition 5, trueilter (cast(Year_Built#63 as int) > 2000)
!            +- Filter (cast(Year_Built#63 as int) > 2000)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv
!               +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization before Inferring Filters after 2 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimitlobalLimit 21
 +- LocalLimitocalLimit 21
!   +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(Year_Built#112, Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]      +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!      +- Filter (Year_Builtepartition 5, true
!         +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, cast(Year_Built#63 as int) AS Year_Built#112, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    +- Filter (cast(Year_Built#63 as int) > 2000)
!            +- Repartition 5, trueelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv
!               +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.optimizer.InferFiltersFromConstraints ===
 GlobalLimitlobalLimit 21
 +- LocalLimitocalLimit 21
    +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]      +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
       +- Repartition 5, trueepartition 5, true
!         +- Filter (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch Infer Filters ===
 GlobalLimitlobalLimit 21
 +- LocalLimitocalLimit 21
    +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]      +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
       +- Repartition 5, trueepartition 5, true
!         +- Filter (cast(Year_Built#63 as int) > 2000)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- Relation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csvelation [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] csv

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Operator Optimization after Inferring Filters after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Operator Optimization after Inferring Filters has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Push extra predicate through join after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Push extra predicate through join has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Clean Up Temporary CTE Info after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Clean Up Temporary CTE Info has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pre CBO Rules after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Pre CBO Rules has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Early Filter and Projection Push-Down after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Early Filter and Projection Push-Down has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Update CTE Relation Stats after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Update CTE Relation Stats has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Join Reorder after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Join Reorder has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Eliminate Sorts after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Eliminate Sorts has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Decimal Optimizations after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Decimal Optimizations has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Distinct Aggregate Rewrite after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Distinct Aggregate Rewrite has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Object Expressions Optimization after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Object Expressions Optimization has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch LocalRelation after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch LocalRelation has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Check Cartesian Products after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Check Cartesian Products has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch RewriteSubquery after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch RewriteSubquery has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch NormalizeFloatingNumbers after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch NormalizeFloatingNumbers has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch ReplaceUpdateFieldsExpression after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch ReplaceUpdateFieldsExpression has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Optimize Metadata Only Query after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Optimize Metadata Only Query has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch PartitionPruning after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch PartitionPruning has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch InjectRuntimeFilter after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch InjectRuntimeFilter has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch MergeScalarSubqueries after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch MergeScalarSubqueries has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Pushdown Filters from PartitionPruning after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Pushdown Filters from PartitionPruning has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Cleanup filters that cannot be pushed down after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Cleanup filters that cannot be pushed down has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Extract Python UDFs after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Extract Python UDFs has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Infer window group limit after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Infer window group limit has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch User Provided Optimizers after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch User Provided Optimizers has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$2: Fixed point reached for batch Replace CTE with Repartition after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Replace CTE with Repartition has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 240
Total time: 0.0252382 seconds
Total number of effective runs: 3
Total time of effective runs: 0.004667 seconds

25/02/13 17:21:49 INFO FileSourceStrategy: Pushed Filters: IsNotNull(Year_Built)
25/02/13 17:21:49 INFO FileSourceStrategy: Post-Scan Filters: isnotnull(Year_Built#63),(cast(Year_Built#63 as int) > 2000)
25/02/13 17:21:49 DEBUG InsertAdaptiveSparkPlan: Adaptive execution enabled for plan: CollectLimit 21
+- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=68]
      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, Year_Built#63, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]
         +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
            +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE PlanChangeLogger: Batch AQE Query Post Planner Strategy Rules has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.RemoveRedundantProjects ===
 CollectLimitollectLimit 21
 +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=72]
!      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, Year_Built#63, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boro#72]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
!         +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...
!            +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch AQE Preparations ===
 CollectLimitollectLimit 21
 +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=72]
!      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, Year_Built#63, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boroilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
!         +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...
!            +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.adaptive.InsertAdaptiveSparkPlan ===
!CollectLimitdaptiveSparkPlan isFinalPlan=false
!+- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- CollectLimit 21
!   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idroject [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, Year_Built#63, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boroxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=72]
          +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,GrileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch Preparations ===
!CollectLimitdaptiveSparkPlan isFinalPlan=false
!+- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- CollectLimit 21
!   +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=68]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             +- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
!      +- Project [Neighborhood#60, Building.Classification#61, Total.Units#62, Year_Built#63, Gross.SqFt#64, Estimated.Gross.Income#65, Gross.Income.per.SqFt#66, Estimated.Expense#67, Expense.per.SqFt#68, Net.Operating.Income#69, Full.Market.Value#70, Market.Value.per.SqFt#71, Boroxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=72]
          +- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,GrileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Substitution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Substitution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Disable Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Disable Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Simple Sanity Check after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Simple Sanity Check has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Keep Legacy Outputs after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Keep Legacy Outputs has no effect.
25/02/13 17:21:49 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro)#152]
25/02/13 17:21:49 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveDeserializer ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(1, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(2, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(3, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(4, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(5, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(6, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(7, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(8, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(9, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(10, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(11, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(12, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields)), obj#166: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(toprettystring(Neighborhood)#140.toString, toprettystring(Building.Classification)#141.toString, toprettystring(Total.Units)#142.toString, toprettystring(Year_Built)#143.toString, toprettystring(Gross.SqFt)#144.toString, toprettystring(Estimated.Gross.Income)#145.toString, toprettystring(Gross.Income.per.SqFt)#146.toString, toprettystring(Estimated.Expense)#147.toString, toprettystring(Expense.per.SqFt)#148.toString, toprettystring(Net.Operating.Income)#149.toString, toprettystring(Full.Market.Value)#150.toString, toprettystring(Market.Value.per.SqFt)#151.toString, toprettystring(Boro)#152.toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields), obj#166: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(BoroocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro)#152]

25/02/13 17:21:49 TRACE Analyzer$ResolveReferences: Attempting to resolve LocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro)#152]
25/02/13 17:21:49 TRACE Analyzer$ResolveReferences: Attempting to resolve DeserializeToObject createexternalrow(toprettystring(Neighborhood)#140.toString, toprettystring(Building.Classification)#141.toString, toprettystring(Total.Units)#142.toString, toprettystring(Year_Built)#143.toString, toprettystring(Gross.SqFt)#144.toString, toprettystring(Estimated.Gross.Income)#145.toString, toprettystring(Gross.Income.per.SqFt)#146.toString, toprettystring(Estimated.Expense)#147.toString, toprettystring(Expense.per.SqFt)#148.toString, toprettystring(Net.Operating.Income)#149.toString, toprettystring(Full.Market.Value)#150.toString, toprettystring(Market.Value.per.SqFt)#151.toString, toprettystring(Boro)#152.toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields), obj#166: org.apache.spark.sql.Row
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Resolution after 2 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(createexternalrow(getcolumnbyordinal(0, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(1, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(2, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(3, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(4, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(5, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(6, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(7, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(8, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(9, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(10, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(11, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, getcolumnbyordinal(12, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), StructField(toprettystring(Market.Value.per.SqFt),StringType,false), StructField(toprettystring(Boro),StringType,false)).toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields)), obj#166: org.apache.spark.sql.Row   DeserializeToObject createexternalrow(toprettystring(Neighborhood)#140.toString, toprettystring(Building.Classification)#141.toString, toprettystring(Total.Units)#142.toString, toprettystring(Year_Built)#143.toString, toprettystring(Gross.SqFt)#144.toString, toprettystring(Estimated.Gross.Income)#145.toString, toprettystring(Gross.Income.per.SqFt)#146.toString, toprettystring(Estimated.Expense)#147.toString, toprettystring(Expense.per.SqFt)#148.toString, toprettystring(Net.Operating.Income)#149.toString, toprettystring(Full.Market.Value)#150.toString, toprettystring(Market.Value.per.SqFt)#151.toString, toprettystring(Boro)#152.toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields), obj#166: org.apache.spark.sql.Row
 +- LocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(BoroocalRelation <empty>, [toprettystring(Neighborhood)#140, toprettystring(Building.Classification)#141, toprettystring(Total.Units)#142, toprettystring(Year_Built)#143, toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro)#152]

25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove TempResolvedColumn after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove TempResolvedColumn has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Post-Hoc Resolution after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Post-Hoc Resolution has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove Unresolved Hints after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove Unresolved Hints has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Nondeterministic after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Nondeterministic has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch ScalaUDF Null Handling after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch ScalaUDF Null Handling has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch UDF after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch UDF has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch DML rewrite after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch DML rewrite has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Subquery after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Subquery has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Cleanup after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Cleanup has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch HandleSpecialCommand after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch HandleSpecialCommand has no effect.
25/02/13 17:21:49 TRACE BaseSessionStateBuilder$$anon$1: Fixed point reached for batch Remove watermark for batch query after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Remove watermark for batch query has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 142
Total time: 0.0114632 seconds
Total number of effective runs: 1
Total time of effective runs: 5.199E-4 seconds

25/02/13 17:21:49 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
!Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
!+- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
    +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...      +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
!Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
!+- Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
    +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...      +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 DEBUG ShuffleQueryStageExec: Materialize query stage ShuffleQueryStageExec: 0
25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.31E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 7.4E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 DEBUG WholeStageCodegenExec:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_3 = inputadapter_row_0.isNullAt(3);
/* 030 */         UTF8String inputadapter_value_3 = inputadapter_isNull_3 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(3));
/* 032 */
/* 033 */         boolean filter_value_2 = !inputadapter_isNull_3;
/* 034 */         if (!filter_value_2) continue;
/* 035 */
/* 036 */         boolean filter_isNull_2 = true;
/* 037 */         boolean filter_value_3 = false;
/* 038 */         boolean filter_isNull_3 = inputadapter_isNull_3;
/* 039 */         int filter_value_4 = -1;
/* 040 */         if (!inputadapter_isNull_3) {
/* 041 */           UTF8String.IntWrapper filter_intWrapper_0 = new UTF8String.IntWrapper();
/* 042 */           if (inputadapter_value_3.toInt(filter_intWrapper_0)) {
/* 043 */             filter_value_4 = filter_intWrapper_0.value;
/* 044 */           } else {
/* 045 */             filter_isNull_3 = true;
/* 046 */           }
/* 047 */           filter_intWrapper_0 = null;
/* 048 */         }
/* 049 */         if (!filter_isNull_3) {
/* 050 */           filter_isNull_2 = false; // resultCode could change nullability.
/* 051 */           filter_value_3 = filter_value_4 > 2000;
/* 052 */
/* 053 */         }
/* 054 */         if (filter_isNull_2 || !filter_value_3) continue;
/* 055 */
/* 056 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 057 */
/* 058 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 059 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 060 */         null : (inputadapter_row_0.getUTF8String(0));
/* 061 */         boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 062 */         UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 063 */         null : (inputadapter_row_0.getUTF8String(1));
/* 064 */         boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 065 */         UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 066 */         null : (inputadapter_row_0.getUTF8String(2));
/* 067 */         boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 068 */         UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 069 */         null : (inputadapter_row_0.getUTF8String(4));
/* 070 */         boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 071 */         UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 072 */         null : (inputadapter_row_0.getUTF8String(5));
/* 073 */         boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 074 */         UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 075 */         null : (inputadapter_row_0.getUTF8String(6));
/* 076 */         boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 077 */         UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 078 */         null : (inputadapter_row_0.getUTF8String(7));
/* 079 */         boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 080 */         UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 081 */         null : (inputadapter_row_0.getUTF8String(8));
/* 082 */         boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 083 */         UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 084 */         null : (inputadapter_row_0.getUTF8String(9));
/* 085 */         boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 086 */         UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 087 */         null : (inputadapter_row_0.getUTF8String(10));
/* 088 */         boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 089 */         UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 090 */         null : (inputadapter_row_0.getUTF8String(11));
/* 091 */         boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 092 */         UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 093 */         null : (inputadapter_row_0.getUTF8String(12));
/* 094 */         filter_mutableStateArray_0[0].reset();
/* 095 */
/* 096 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 097 */
/* 098 */         if (inputadapter_isNull_0) {
/* 099 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 100 */         } else {
/* 101 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 102 */         }
/* 103 */
/* 104 */         if (inputadapter_isNull_1) {
/* 105 */           filter_mutableStateArray_0[0].setNullAt(1);
/* 106 */         } else {
/* 107 */           filter_mutableStateArray_0[0].write(1, inputadapter_value_1);
/* 108 */         }
/* 109 */
/* 110 */         if (inputadapter_isNull_2) {
/* 111 */           filter_mutableStateArray_0[0].setNullAt(2);
/* 112 */         } else {
/* 113 */           filter_mutableStateArray_0[0].write(2, inputadapter_value_2);
/* 114 */         }
/* 115 */
/* 116 */         filter_mutableStateArray_0[0].write(3, inputadapter_value_3);
/* 117 */
/* 118 */         if (inputadapter_isNull_4) {
/* 119 */           filter_mutableStateArray_0[0].setNullAt(4);
/* 120 */         } else {
/* 121 */           filter_mutableStateArray_0[0].write(4, inputadapter_value_4);
/* 122 */         }
/* 123 */
/* 124 */         if (inputadapter_isNull_5) {
/* 125 */           filter_mutableStateArray_0[0].setNullAt(5);
/* 126 */         } else {
/* 127 */           filter_mutableStateArray_0[0].write(5, inputadapter_value_5);
/* 128 */         }
/* 129 */
/* 130 */         if (inputadapter_isNull_6) {
/* 131 */           filter_mutableStateArray_0[0].setNullAt(6);
/* 132 */         } else {
/* 133 */           filter_mutableStateArray_0[0].write(6, inputadapter_value_6);
/* 134 */         }
/* 135 */
/* 136 */         if (inputadapter_isNull_7) {
/* 137 */           filter_mutableStateArray_0[0].setNullAt(7);
/* 138 */         } else {
/* 139 */           filter_mutableStateArray_0[0].write(7, inputadapter_value_7);
/* 140 */         }
/* 141 */
/* 142 */         if (inputadapter_isNull_8) {
/* 143 */           filter_mutableStateArray_0[0].setNullAt(8);
/* 144 */         } else {
/* 145 */           filter_mutableStateArray_0[0].write(8, inputadapter_value_8);
/* 146 */         }
/* 147 */
/* 148 */         if (inputadapter_isNull_9) {
/* 149 */           filter_mutableStateArray_0[0].setNullAt(9);
/* 150 */         } else {
/* 151 */           filter_mutableStateArray_0[0].write(9, inputadapter_value_9);
/* 152 */         }
/* 153 */
/* 154 */         if (inputadapter_isNull_10) {
/* 155 */           filter_mutableStateArray_0[0].setNullAt(10);
/* 156 */         } else {
/* 157 */           filter_mutableStateArray_0[0].write(10, inputadapter_value_10);
/* 158 */         }
/* 159 */
/* 160 */         if (inputadapter_isNull_11) {
/* 161 */           filter_mutableStateArray_0[0].setNullAt(11);
/* 162 */         } else {
/* 163 */           filter_mutableStateArray_0[0].write(11, inputadapter_value_11);
/* 164 */         }
/* 165 */
/* 166 */         if (inputadapter_isNull_12) {
/* 167 */           filter_mutableStateArray_0[0].setNullAt(12);
/* 168 */         } else {
/* 169 */           filter_mutableStateArray_0[0].write(12, inputadapter_value_12);
/* 170 */         }
/* 171 */         append((filter_mutableStateArray_0[0].getRow()));
/* 172 */
/* 173 */       } while(false);
/* 174 */       if (shouldStop()) return;
/* 175 */     }
/* 176 */   }
/* 177 */
/* 178 */ }

25/02/13 17:21:49 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_3 = inputadapter_row_0.isNullAt(3);
/* 030 */         UTF8String inputadapter_value_3 = inputadapter_isNull_3 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(3));
/* 032 */
/* 033 */         boolean filter_value_2 = !inputadapter_isNull_3;
/* 034 */         if (!filter_value_2) continue;
/* 035 */
/* 036 */         boolean filter_isNull_2 = true;
/* 037 */         boolean filter_value_3 = false;
/* 038 */         boolean filter_isNull_3 = inputadapter_isNull_3;
/* 039 */         int filter_value_4 = -1;
/* 040 */         if (!inputadapter_isNull_3) {
/* 041 */           UTF8String.IntWrapper filter_intWrapper_0 = new UTF8String.IntWrapper();
/* 042 */           if (inputadapter_value_3.toInt(filter_intWrapper_0)) {
/* 043 */             filter_value_4 = filter_intWrapper_0.value;
/* 044 */           } else {
/* 045 */             filter_isNull_3 = true;
/* 046 */           }
/* 047 */           filter_intWrapper_0 = null;
/* 048 */         }
/* 049 */         if (!filter_isNull_3) {
/* 050 */           filter_isNull_2 = false; // resultCode could change nullability.
/* 051 */           filter_value_3 = filter_value_4 > 2000;
/* 052 */
/* 053 */         }
/* 054 */         if (filter_isNull_2 || !filter_value_3) continue;
/* 055 */
/* 056 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 057 */
/* 058 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 059 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 060 */         null : (inputadapter_row_0.getUTF8String(0));
/* 061 */         boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 062 */         UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 063 */         null : (inputadapter_row_0.getUTF8String(1));
/* 064 */         boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 065 */         UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 066 */         null : (inputadapter_row_0.getUTF8String(2));
/* 067 */         boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 068 */         UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 069 */         null : (inputadapter_row_0.getUTF8String(4));
/* 070 */         boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 071 */         UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 072 */         null : (inputadapter_row_0.getUTF8String(5));
/* 073 */         boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 074 */         UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 075 */         null : (inputadapter_row_0.getUTF8String(6));
/* 076 */         boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 077 */         UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 078 */         null : (inputadapter_row_0.getUTF8String(7));
/* 079 */         boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 080 */         UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 081 */         null : (inputadapter_row_0.getUTF8String(8));
/* 082 */         boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 083 */         UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 084 */         null : (inputadapter_row_0.getUTF8String(9));
/* 085 */         boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 086 */         UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 087 */         null : (inputadapter_row_0.getUTF8String(10));
/* 088 */         boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 089 */         UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 090 */         null : (inputadapter_row_0.getUTF8String(11));
/* 091 */         boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 092 */         UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 093 */         null : (inputadapter_row_0.getUTF8String(12));
/* 094 */         filter_mutableStateArray_0[0].reset();
/* 095 */
/* 096 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 097 */
/* 098 */         if (inputadapter_isNull_0) {
/* 099 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 100 */         } else {
/* 101 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 102 */         }
/* 103 */
/* 104 */         if (inputadapter_isNull_1) {
/* 105 */           filter_mutableStateArray_0[0].setNullAt(1);
/* 106 */         } else {
/* 107 */           filter_mutableStateArray_0[0].write(1, inputadapter_value_1);
/* 108 */         }
/* 109 */
/* 110 */         if (inputadapter_isNull_2) {
/* 111 */           filter_mutableStateArray_0[0].setNullAt(2);
/* 112 */         } else {
/* 113 */           filter_mutableStateArray_0[0].write(2, inputadapter_value_2);
/* 114 */         }
/* 115 */
/* 116 */         filter_mutableStateArray_0[0].write(3, inputadapter_value_3);
/* 117 */
/* 118 */         if (inputadapter_isNull_4) {
/* 119 */           filter_mutableStateArray_0[0].setNullAt(4);
/* 120 */         } else {
/* 121 */           filter_mutableStateArray_0[0].write(4, inputadapter_value_4);
/* 122 */         }
/* 123 */
/* 124 */         if (inputadapter_isNull_5) {
/* 125 */           filter_mutableStateArray_0[0].setNullAt(5);
/* 126 */         } else {
/* 127 */           filter_mutableStateArray_0[0].write(5, inputadapter_value_5);
/* 128 */         }
/* 129 */
/* 130 */         if (inputadapter_isNull_6) {
/* 131 */           filter_mutableStateArray_0[0].setNullAt(6);
/* 132 */         } else {
/* 133 */           filter_mutableStateArray_0[0].write(6, inputadapter_value_6);
/* 134 */         }
/* 135 */
/* 136 */         if (inputadapter_isNull_7) {
/* 137 */           filter_mutableStateArray_0[0].setNullAt(7);
/* 138 */         } else {
/* 139 */           filter_mutableStateArray_0[0].write(7, inputadapter_value_7);
/* 140 */         }
/* 141 */
/* 142 */         if (inputadapter_isNull_8) {
/* 143 */           filter_mutableStateArray_0[0].setNullAt(8);
/* 144 */         } else {
/* 145 */           filter_mutableStateArray_0[0].write(8, inputadapter_value_8);
/* 146 */         }
/* 147 */
/* 148 */         if (inputadapter_isNull_9) {
/* 149 */           filter_mutableStateArray_0[0].setNullAt(9);
/* 150 */         } else {
/* 151 */           filter_mutableStateArray_0[0].write(9, inputadapter_value_9);
/* 152 */         }
/* 153 */
/* 154 */         if (inputadapter_isNull_10) {
/* 155 */           filter_mutableStateArray_0[0].setNullAt(10);
/* 156 */         } else {
/* 157 */           filter_mutableStateArray_0[0].write(10, inputadapter_value_10);
/* 158 */         }
/* 159 */
/* 160 */         if (inputadapter_isNull_11) {
/* 161 */           filter_mutableStateArray_0[0].setNullAt(11);
/* 162 */         } else {
/* 163 */           filter_mutableStateArray_0[0].write(11, inputadapter_value_11);
/* 164 */         }
/* 165 */
/* 166 */         if (inputadapter_isNull_12) {
/* 167 */           filter_mutableStateArray_0[0].setNullAt(12);
/* 168 */         } else {
/* 169 */           filter_mutableStateArray_0[0].write(12, inputadapter_value_12);
/* 170 */         }
/* 171 */         append((filter_mutableStateArray_0[0].getRow()));
/* 172 */
/* 173 */       } while(false);
/* 174 */       if (shouldStop()) return;
/* 175 */     }
/* 176 */   }
/* 177 */
/* 178 */ }

25/02/13 17:21:49 INFO CodeGenerator: Code generated in 26.8313 ms
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to put broadcast_9
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_9
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_9
25/02/13 17:21:49 INFO MemoryStore: Block broadcast_9 stored as values in memory (estimated size 200.0 KiB, free 433.7 MiB)
25/02/13 17:21:49 DEBUG BlockManager: Put block broadcast_9 locally took 2 ms
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_9
25/02/13 17:21:49 DEBUG BlockManager: Putting block broadcast_9 without replication took 2 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(177)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 177
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 177
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to put broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(178)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 178
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 178
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(179)
25/02/13 17:21:49 INFO MemoryStore: Block broadcast_9_piece0 stored as bytes in memory (estimated size 34.4 KiB, free 433.7 MiB)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 179
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 179
25/02/13 17:21:49 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_9_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(175)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 175
25/02/13 17:21:49 INFO BlockManagerInfo: Added broadcast_9_piece0 in memory on hy80:50377 (size: 34.4 KiB, free: 434.3 MiB)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 175
25/02/13 17:21:49 DEBUG BlockManagerMaster: Updated info of block broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(181)
25/02/13 17:21:49 DEBUG BlockManager: Told master about block broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 181
25/02/13 17:21:49 DEBUG BlockManager: Put block broadcast_9_piece0 locally took 4 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 181
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_9_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(168)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 168
25/02/13 17:21:49 DEBUG BlockManager: Putting block broadcast_9_piece0 without replication took 14 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 168
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(166)
25/02/13 17:21:49 INFO SparkContext: Created broadcast 9 from showString at <unknown>:0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 166
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 166
25/02/13 17:21:49 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(8)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning broadcast 8
25/02/13 17:21:49 TRACE InMemoryFileIndex: Partition spec: PartitionSpec(StructType(),List())
25/02/13 17:21:49 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 8
25/02/13 17:21:49 TRACE InMemoryFileIndex: Selected files after partition pruning:
        PartitionDirectory([empty row],WrappedArray(FileStatusWithMetadata(LocatedFileStatus{path=file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv; isDirectory=false; length=267845; replication=1; blocksize=33554432; modification_time=1585864848000; access_time=0; owner=; group=; permission=rw-rw-rw-; isSymlink=false; hasAcl=false; isEncrypted=false; isErasureCoded=false},Map())))
25/02/13 17:21:49 INFO FileSourceScanExec: Planning scan with bin packing, max size: 4194304 bytes, open cost is considered as scanning 4194304 bytes.
25/02/13 17:21:49 DEBUG BlockManagerStorageEndpoint: removing broadcast 8
25/02/13 17:21:49 DEBUG BlockManager: Removing broadcast 8
25/02/13 17:21:49 DEBUG BlockManager: Removing block broadcast_8
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_8
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_8
25/02/13 17:21:49 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
25/02/13 17:21:49 DEBUG MemoryStore: Block broadcast_8 of size 16656 dropped from memory (free 454772993)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_8
25/02/13 17:21:49 DEBUG BlockManager: Removing block broadcast_8_piece0
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_8_piece0
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_8_piece0
25/02/13 17:21:49 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
25/02/13 17:21:49 DEBUG MemoryStore: Block broadcast_8_piece0 of size 8148 dropped from memory (free 454781141)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_8_piece0
25/02/13 17:21:49 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_8_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:49 INFO BlockManagerInfo: Removed broadcast_8_piece0 on hy80:50377 in memory (size: 8.0 KiB, free: 434.3 MiB)
25/02/13 17:21:49 DEBUG BlockManagerMaster: Updated info of block broadcast_8_piece0
25/02/13 17:21:49 DEBUG BlockManager: Told master about block broadcast_8_piece0
25/02/13 17:21:49 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 37 took 0.000064 seconds
25/02/13 17:21:49 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:49 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 8, response is 0
25/02/13 17:21:49 INFO DAGScheduler: Registering RDD 37 (showString at <unknown>:0) as input to shuffle 1
25/02/13 17:21:49 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:49 INFO DAGScheduler: Got map stage job 3 (showString at <unknown>:0) with 1 output partitions
25/02/13 17:21:49 INFO DAGScheduler: Final stage: ShuffleMapStage 3 (showString at <unknown>:0)
25/02/13 17:21:49 INFO DAGScheduler: Parents of final stage: List()
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned broadcast 8
25/02/13 17:21:49 INFO DAGScheduler: Missing parents: List()
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(176)
25/02/13 17:21:49 DEBUG DAGScheduler: submitStage(ShuffleMapStage 3 (name=showString at <unknown>:0;jobs=3))
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 176
25/02/13 17:21:49 DEBUG DAGScheduler: missing: List()
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 176
25/02/13 17:21:49 INFO DAGScheduler: Submitting ShuffleMapStage 3 (MapPartitionsRDD[37] at showString at <unknown>:0), which has no missing parents
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(188)
25/02/13 17:21:49 DEBUG DAGScheduler: submitMissingTasks(ShuffleMapStage 3)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 188
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 188
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(191)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 191
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 191
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(169)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 169
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 169
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(167)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 167
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 167
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to put broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(172)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 172
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 172
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(187)
25/02/13 17:21:49 INFO MemoryStore: Block broadcast_10 stored as values in memory (estimated size 23.6 KiB, free 433.7 MiB)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 187
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 187
25/02/13 17:21:49 DEBUG BlockManager: Put block broadcast_10 locally took 1 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(184)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 184
25/02/13 17:21:49 DEBUG BlockManager: Putting block broadcast_10 without replication took 4 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 184
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(173)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 173
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to put broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 173
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(170)
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 170
25/02/13 17:21:49 INFO MemoryStore: Block broadcast_10_piece0 stored as bytes in memory (estimated size 10.1 KiB, free 433.7 MiB)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 170
25/02/13 17:21:49 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_10_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(180)
25/02/13 17:21:49 INFO BlockManagerInfo: Added broadcast_10_piece0 in memory on hy80:50377 (size: 10.1 KiB, free: 434.3 MiB)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 180
25/02/13 17:21:49 DEBUG BlockManagerMaster: Updated info of block broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 180
25/02/13 17:21:49 DEBUG BlockManager: Told master about block broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(195)
25/02/13 17:21:49 DEBUG BlockManager: Put block broadcast_10_piece0 locally took 5 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 195
25/02/13 17:21:49 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_10_piece0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 195
25/02/13 17:21:49 DEBUG BlockManager: Putting block broadcast_10_piece0 without replication took 7 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(193)
25/02/13 17:21:49 INFO SparkContext: Created broadcast 10 from broadcast at DAGScheduler.scala:1585
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 193
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 193
25/02/13 17:21:49 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 3 (MapPartitionsRDD[37] at showString at <unknown>:0) (first 15 tasks are for partitions Vector(0))
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(164)
25/02/13 17:21:49 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 164
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 164
25/02/13 17:21:49 DEBUG TaskSetManager: Epoch for TaskSet 3.0: 1
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(162)
25/02/13 17:21:49 DEBUG TaskSetManager: Adding pending tasks took 0 ms
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 162
25/02/13 17:21:49 DEBUG TaskSetManager: Valid locality levels for TaskSet 3.0: NO_PREF, ANY
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 162
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(194)
25/02/13 17:21:49 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_3.0, runningTasks: 0
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 194
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 194
25/02/13 17:21:49 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3) (hy80, executor driver, partition 0, PROCESS_LOCAL, 9635 bytes)
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(182)
25/02/13 17:21:49 DEBUG TaskSetManager: No tasks for locality level NO_PREF, so moving to locality level ANY
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 182
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 182
25/02/13 17:21:49 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(185)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 185
25/02/13 17:21:49 DEBUG ExecutorMetricsPoller: stageTCMP: (3, 0) -> 1
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 185
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(190)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 190
25/02/13 17:21:49 DEBUG BlockManager: Getting local block broadcast_10
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 trying to acquire read lock for broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 190
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 acquired read lock for broadcast_10
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(189)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 189
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 189
25/02/13 17:21:49 DEBUG BlockManager: Level for block broadcast_10 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(192)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 192
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 192
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(165)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 165
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 165
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(186)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 186
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 186
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(183)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 183
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 183
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(163)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 163
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 163
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(174)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 174
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 174
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(161)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 161
25/02/13 17:21:49 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       do {
/* 029 */         boolean inputadapter_isNull_3 = inputadapter_row_0.isNullAt(3);
/* 030 */         UTF8String inputadapter_value_3 = inputadapter_isNull_3 ?
/* 031 */         null : (inputadapter_row_0.getUTF8String(3));
/* 032 */
/* 033 */         boolean filter_value_2 = !inputadapter_isNull_3;
/* 034 */         if (!filter_value_2) continue;
/* 035 */
/* 036 */         boolean filter_isNull_2 = true;
/* 037 */         boolean filter_value_3 = false;
/* 038 */         boolean filter_isNull_3 = inputadapter_isNull_3;
/* 039 */         int filter_value_4 = -1;
/* 040 */         if (!inputadapter_isNull_3) {
/* 041 */           UTF8String.IntWrapper filter_intWrapper_0 = new UTF8String.IntWrapper();
/* 042 */           if (inputadapter_value_3.toInt(filter_intWrapper_0)) {
/* 043 */             filter_value_4 = filter_intWrapper_0.value;
/* 044 */           } else {
/* 045 */             filter_isNull_3 = true;
/* 046 */           }
/* 047 */           filter_intWrapper_0 = null;
/* 048 */         }
/* 049 */         if (!filter_isNull_3) {
/* 050 */           filter_isNull_2 = false; // resultCode could change nullability.
/* 051 */           filter_value_3 = filter_value_4 > 2000;
/* 052 */
/* 053 */         }
/* 054 */         if (filter_isNull_2 || !filter_value_3) continue;
/* 055 */
/* 056 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 057 */
/* 058 */         boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 059 */         UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 060 */         null : (inputadapter_row_0.getUTF8String(0));
/* 061 */         boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 062 */         UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 063 */         null : (inputadapter_row_0.getUTF8String(1));
/* 064 */         boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 065 */         UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 066 */         null : (inputadapter_row_0.getUTF8String(2));
/* 067 */         boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 068 */         UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 069 */         null : (inputadapter_row_0.getUTF8String(4));
/* 070 */         boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 071 */         UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 072 */         null : (inputadapter_row_0.getUTF8String(5));
/* 073 */         boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 074 */         UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 075 */         null : (inputadapter_row_0.getUTF8String(6));
/* 076 */         boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 077 */         UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 078 */         null : (inputadapter_row_0.getUTF8String(7));
/* 079 */         boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 080 */         UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 081 */         null : (inputadapter_row_0.getUTF8String(8));
/* 082 */         boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 083 */         UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 084 */         null : (inputadapter_row_0.getUTF8String(9));
/* 085 */         boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 086 */         UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 087 */         null : (inputadapter_row_0.getUTF8String(10));
/* 088 */         boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 089 */         UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 090 */         null : (inputadapter_row_0.getUTF8String(11));
/* 091 */         boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 092 */         UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 093 */         null : (inputadapter_row_0.getUTF8String(12));
/* 094 */         filter_mutableStateArray_0[0].reset();
/* 095 */
/* 096 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 097 */
/* 098 */         if (inputadapter_isNull_0) {
/* 099 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 100 */         } else {
/* 101 */           filter_mutableStateArray_0[0].write(0, inputadapter_value_0);
/* 102 */         }
/* 103 */
/* 104 */         if (inputadapter_isNull_1) {
/* 105 */           filter_mutableStateArray_0[0].setNullAt(1);
/* 106 */         } else {
/* 107 */           filter_mutableStateArray_0[0].write(1, inputadapter_value_1);
/* 108 */         }
/* 109 */
/* 110 */         if (inputadapter_isNull_2) {
/* 111 */           filter_mutableStateArray_0[0].setNullAt(2);
/* 112 */         } else {
/* 113 */           filter_mutableStateArray_0[0].write(2, inputadapter_value_2);
/* 114 */         }
/* 115 */
/* 116 */         filter_mutableStateArray_0[0].write(3, inputadapter_value_3);
/* 117 */
/* 118 */         if (inputadapter_isNull_4) {
/* 119 */           filter_mutableStateArray_0[0].setNullAt(4);
/* 120 */         } else {
/* 121 */           filter_mutableStateArray_0[0].write(4, inputadapter_value_4);
/* 122 */         }
/* 123 */
/* 124 */         if (inputadapter_isNull_5) {
/* 125 */           filter_mutableStateArray_0[0].setNullAt(5);
/* 126 */         } else {
/* 127 */           filter_mutableStateArray_0[0].write(5, inputadapter_value_5);
/* 128 */         }
/* 129 */
/* 130 */         if (inputadapter_isNull_6) {
/* 131 */           filter_mutableStateArray_0[0].setNullAt(6);
/* 132 */         } else {
/* 133 */           filter_mutableStateArray_0[0].write(6, inputadapter_value_6);
/* 134 */         }
/* 135 */
/* 136 */         if (inputadapter_isNull_7) {
/* 137 */           filter_mutableStateArray_0[0].setNullAt(7);
/* 138 */         } else {
/* 139 */           filter_mutableStateArray_0[0].write(7, inputadapter_value_7);
/* 140 */         }
/* 141 */
/* 142 */         if (inputadapter_isNull_8) {
/* 143 */           filter_mutableStateArray_0[0].setNullAt(8);
/* 144 */         } else {
/* 145 */           filter_mutableStateArray_0[0].write(8, inputadapter_value_8);
/* 146 */         }
/* 147 */
/* 148 */         if (inputadapter_isNull_9) {
/* 149 */           filter_mutableStateArray_0[0].setNullAt(9);
/* 150 */         } else {
/* 151 */           filter_mutableStateArray_0[0].write(9, inputadapter_value_9);
/* 152 */         }
/* 153 */
/* 154 */         if (inputadapter_isNull_10) {
/* 155 */           filter_mutableStateArray_0[0].setNullAt(10);
/* 156 */         } else {
/* 157 */           filter_mutableStateArray_0[0].write(10, inputadapter_value_10);
/* 158 */         }
/* 159 */
/* 160 */         if (inputadapter_isNull_11) {
/* 161 */           filter_mutableStateArray_0[0].setNullAt(11);
/* 162 */         } else {
/* 163 */           filter_mutableStateArray_0[0].write(11, inputadapter_value_11);
/* 164 */         }
/* 165 */
/* 166 */         if (inputadapter_isNull_12) {
/* 167 */           filter_mutableStateArray_0[0].setNullAt(12);
/* 168 */         } else {
/* 169 */           filter_mutableStateArray_0[0].write(12, inputadapter_value_12);
/* 170 */         }
/* 171 */         append((filter_mutableStateArray_0[0].getRow()));
/* 172 */
/* 173 */       } while(false);
/* 174 */       if (shouldStop()) return;
/* 175 */     }
/* 176 */   }
/* 177 */
/* 178 */ }

25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 161
25/02/13 17:21:49 DEBUG ContextCleaner: Got cleaning task CleanAccum(171)
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaning accumulator 171
25/02/13 17:21:49 DEBUG ContextCleaner: Cleaned accumulator 171
25/02/13 17:21:49 INFO CodeGenerator: Code generated in 18.8707 ms
25/02/13 17:21:49 DEBUG TaskMemoryManager: Task 3 acquired 64.0 KiB for org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@1540917e
25/02/13 17:21:49 TRACE TaskMemoryManager: Allocate page number 0 (65536 bytes)
25/02/13 17:21:49 INFO FileScanRDD: Reading File path: file:///C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bin/houses.csv, range: 0-267845, partition values: [empty row]
25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.3E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.04E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.45E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 6.3E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.08E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.11E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 8.7E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.61E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.05E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 9.0E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.1E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 3.8E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 5.1E-6 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 DEBUG GenerateUnsafeProjection: code for input[0, string, true],input[1, string, true],input[2, string, true],input[3, string, true],input[4, string, true],input[5, string, true],input[6, string, true],input[7, string, true],input[8, string, true],input[9, string, true],input[10, string, true],input[11, string, true],input[12, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */     writeFields_0_0(i);
/* 031 */     writeFields_0_1(i);
/* 032 */     writeFields_0_2(i);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */   private void writeFields_0_1(InternalRow i) {
/* 038 */
/* 039 */     boolean isNull_5 = i.isNullAt(5);
/* 040 */     UTF8String value_5 = isNull_5 ?
/* 041 */     null : (i.getUTF8String(5));
/* 042 */     if (isNull_5) {
/* 043 */       mutableStateArray_0[0].setNullAt(5);
/* 044 */     } else {
/* 045 */       mutableStateArray_0[0].write(5, value_5);
/* 046 */     }
/* 047 */
/* 048 */     boolean isNull_6 = i.isNullAt(6);
/* 049 */     UTF8String value_6 = isNull_6 ?
/* 050 */     null : (i.getUTF8String(6));
/* 051 */     if (isNull_6) {
/* 052 */       mutableStateArray_0[0].setNullAt(6);
/* 053 */     } else {
/* 054 */       mutableStateArray_0[0].write(6, value_6);
/* 055 */     }
/* 056 */
/* 057 */     boolean isNull_7 = i.isNullAt(7);
/* 058 */     UTF8String value_7 = isNull_7 ?
/* 059 */     null : (i.getUTF8String(7));
/* 060 */     if (isNull_7) {
/* 061 */       mutableStateArray_0[0].setNullAt(7);
/* 062 */     } else {
/* 063 */       mutableStateArray_0[0].write(7, value_7);
/* 064 */     }
/* 065 */
/* 066 */     boolean isNull_8 = i.isNullAt(8);
/* 067 */     UTF8String value_8 = isNull_8 ?
/* 068 */     null : (i.getUTF8String(8));
/* 069 */     if (isNull_8) {
/* 070 */       mutableStateArray_0[0].setNullAt(8);
/* 071 */     } else {
/* 072 */       mutableStateArray_0[0].write(8, value_8);
/* 073 */     }
/* 074 */
/* 075 */     boolean isNull_9 = i.isNullAt(9);
/* 076 */     UTF8String value_9 = isNull_9 ?
/* 077 */     null : (i.getUTF8String(9));
/* 078 */     if (isNull_9) {
/* 079 */       mutableStateArray_0[0].setNullAt(9);
/* 080 */     } else {
/* 081 */       mutableStateArray_0[0].write(9, value_9);
/* 082 */     }
/* 083 */
/* 084 */   }
/* 085 */
/* 086 */
/* 087 */   private void writeFields_0_0(InternalRow i) {
/* 088 */
/* 089 */     boolean isNull_0 = i.isNullAt(0);
/* 090 */     UTF8String value_0 = isNull_0 ?
/* 091 */     null : (i.getUTF8String(0));
/* 092 */     if (isNull_0) {
/* 093 */       mutableStateArray_0[0].setNullAt(0);
/* 094 */     } else {
/* 095 */       mutableStateArray_0[0].write(0, value_0);
/* 096 */     }
/* 097 */
/* 098 */     boolean isNull_1 = i.isNullAt(1);
/* 099 */     UTF8String value_1 = isNull_1 ?
/* 100 */     null : (i.getUTF8String(1));
/* 101 */     if (isNull_1) {
/* 102 */       mutableStateArray_0[0].setNullAt(1);
/* 103 */     } else {
/* 104 */       mutableStateArray_0[0].write(1, value_1);
/* 105 */     }
/* 106 */
/* 107 */     boolean isNull_2 = i.isNullAt(2);
/* 108 */     UTF8String value_2 = isNull_2 ?
/* 109 */     null : (i.getUTF8String(2));
/* 110 */     if (isNull_2) {
/* 111 */       mutableStateArray_0[0].setNullAt(2);
/* 112 */     } else {
/* 113 */       mutableStateArray_0[0].write(2, value_2);
/* 114 */     }
/* 115 */
/* 116 */     boolean isNull_3 = i.isNullAt(3);
/* 117 */     UTF8String value_3 = isNull_3 ?
/* 118 */     null : (i.getUTF8String(3));
/* 119 */     if (isNull_3) {
/* 120 */       mutableStateArray_0[0].setNullAt(3);
/* 121 */     } else {
/* 122 */       mutableStateArray_0[0].write(3, value_3);
/* 123 */     }
/* 124 */
/* 125 */     boolean isNull_4 = i.isNullAt(4);
/* 126 */     UTF8String value_4 = isNull_4 ?
/* 127 */     null : (i.getUTF8String(4));
/* 128 */     if (isNull_4) {
/* 129 */       mutableStateArray_0[0].setNullAt(4);
/* 130 */     } else {
/* 131 */       mutableStateArray_0[0].write(4, value_4);
/* 132 */     }
/* 133 */
/* 134 */   }
/* 135 */
/* 136 */
/* 137 */   private void writeFields_0_2(InternalRow i) {
/* 138 */
/* 139 */     boolean isNull_10 = i.isNullAt(10);
/* 140 */     UTF8String value_10 = isNull_10 ?
/* 141 */     null : (i.getUTF8String(10));
/* 142 */     if (isNull_10) {
/* 143 */       mutableStateArray_0[0].setNullAt(10);
/* 144 */     } else {
/* 145 */       mutableStateArray_0[0].write(10, value_10);
/* 146 */     }
/* 147 */
/* 148 */     boolean isNull_11 = i.isNullAt(11);
/* 149 */     UTF8String value_11 = isNull_11 ?
/* 150 */     null : (i.getUTF8String(11));
/* 151 */     if (isNull_11) {
/* 152 */       mutableStateArray_0[0].setNullAt(11);
/* 153 */     } else {
/* 154 */       mutableStateArray_0[0].write(11, value_11);
/* 155 */     }
/* 156 */
/* 157 */     boolean isNull_12 = i.isNullAt(12);
/* 158 */     UTF8String value_12 = isNull_12 ?
/* 159 */     null : (i.getUTF8String(12));
/* 160 */     if (isNull_12) {
/* 161 */       mutableStateArray_0[0].setNullAt(12);
/* 162 */     } else {
/* 163 */       mutableStateArray_0[0].write(12, value_12);
/* 164 */     }
/* 165 */
/* 166 */   }
/* 167 */
/* 168 */ }

25/02/13 17:21:49 DEBUG BlockManager: Getting local block broadcast_9
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 trying to acquire read lock for broadcast_9
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 acquired read lock for broadcast_9
25/02/13 17:21:49 DEBUG BlockManager: Level for block broadcast_9 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:49 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 2.52E-5 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 DEBUG GeneratePredicate: Generated predicate 'isnotnull(input[3, string, true])':
/* 001 */ public SpecificPredicate generate(Object[] references) {
/* 002 */   return new SpecificPredicate(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificPredicate extends org.apache.spark.sql.catalyst.expressions.BasePredicate {
/* 006 */   private final Object[] references;
/* 007 */
/* 008 */
/* 009 */   public SpecificPredicate(Object[] references) {
/* 010 */     this.references = references;
/* 011 */
/* 012 */   }
/* 013 */
/* 014 */   public void initialize(int partitionIndex) {
/* 015 */
/* 016 */   }
/* 017 */
/* 018 */   public boolean eval(InternalRow i) {
/* 019 */
/* 020 */     boolean isNull_1 = i.isNullAt(3);
/* 021 */     UTF8String value_1 = isNull_1 ?
/* 022 */     null : (i.getUTF8String(3));
/* 023 */     boolean value_2 = !isNull_1;
/* 024 */     return !false && value_2;
/* 025 */   }
/* 026 */
/* 027 */
/* 028 */ }

25/02/13 17:21:49 DEBUG CodeGenerator:
/* 001 */ public SpecificPredicate generate(Object[] references) {
/* 002 */   return new SpecificPredicate(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificPredicate extends org.apache.spark.sql.catalyst.expressions.BasePredicate {
/* 006 */   private final Object[] references;
/* 007 */
/* 008 */
/* 009 */   public SpecificPredicate(Object[] references) {
/* 010 */     this.references = references;
/* 011 */
/* 012 */   }
/* 013 */
/* 014 */   public void initialize(int partitionIndex) {
/* 015 */
/* 016 */   }
/* 017 */
/* 018 */   public boolean eval(InternalRow i) {
/* 019 */
/* 020 */     boolean isNull_1 = i.isNullAt(3);
/* 021 */     UTF8String value_1 = isNull_1 ?
/* 022 */     null : (i.getUTF8String(3));
/* 023 */     boolean value_2 = !isNull_1;
/* 024 */     return !false && value_2;
/* 025 */   }
/* 026 */
/* 027 */
/* 028 */ }

25/02/13 17:21:49 INFO CodeGenerator: Code generated in 9.9227 ms
25/02/13 17:21:49 DEBUG TaskMemoryManager: Task 3 acquired 2048.0 KiB for org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@1540917e
25/02/13 17:21:49 TRACE TaskMemoryManager: Allocate page number 1 (2097136 bytes)
25/02/13 17:21:49 TRACE TaskMemoryManager: Freed page number 1 (2097136 bytes)
25/02/13 17:21:49 DEBUG TaskMemoryManager: Task 3 release 2048.0 KiB from org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@1540917e
25/02/13 17:21:49 TRACE TaskMemoryManager: Freed page number 0 (65536 bytes)
25/02/13 17:21:49 DEBUG TaskMemoryManager: Task 3 release 64.0 KiB from org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@1540917e
25/02/13 17:21:49 DEBUG LocalDiskShuffleMapOutputWriter: Writing shuffle index file for mapId 3 with length 5
25/02/13 17:21:49 DEBUG IndexShuffleBlockResolver: Shuffle index for mapId 3: [21559,21363,21162,21718,21451]
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 releasing lock for broadcast_9
25/02/13 17:21:49 TRACE BlockInfoManager: Task 3 releasing lock for broadcast_10
25/02/13 17:21:49 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 1882 bytes result sent to driver
25/02/13 17:21:49 DEBUG ExecutorMetricsPoller: stageTCMP: (3, 0) -> 0
25/02/13 17:21:49 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 228 ms on hy80 (executor driver) (1/1)
25/02/13 17:21:49 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
25/02/13 17:21:49 DEBUG DAGScheduler: ShuffleMapTask finished on driver
25/02/13 17:21:49 INFO DAGScheduler: ShuffleMapStage 3 (showString at <unknown>:0) finished in 0.286 s
25/02/13 17:21:49 INFO DAGScheduler: looking for newly runnable stages
25/02/13 17:21:49 INFO DAGScheduler: running: Set()
25/02/13 17:21:49 INFO DAGScheduler: waiting: Set()
25/02/13 17:21:49 INFO DAGScheduler: failed: Set()
25/02/13 17:21:49 DEBUG MapOutputTrackerMaster: Increasing epoch to 2
25/02/13 17:21:49 DEBUG DAGScheduler: After removal of stage 3, remaining stages = 0
25/02/13 17:21:49 TRACE DAGScheduler: Checking if any dependencies of ShuffleMapStage 3 are now runnable
25/02/13 17:21:49 TRACE DAGScheduler: running: Set()
25/02/13 17:21:49 TRACE DAGScheduler: waiting: Set()
25/02/13 17:21:49 TRACE DAGScheduler: failed: Set()
25/02/13 17:21:49 TRACE AQEOptimizer: Fixed point reached for batch Propagate Empty Relations after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Propagate Empty Relations has no effect.
25/02/13 17:21:49 TRACE AQEOptimizer: Fixed point reached for batch Dynamic Join Selection after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Dynamic Join Selection has no effect.
25/02/13 17:21:49 DEBUG LogicalQueryStage: Physical stats available as Statistics(sizeInBytes=216.0 KiB, rowCount=939) for plan: ShuffleQueryStage 0
+- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
   +- *(1) Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
      +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE AQEOptimizer: Fixed point reached for batch Eliminate Limits after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Eliminate Limits has no effect.
25/02/13 17:21:49 TRACE AQEOptimizer: Fixed point reached for batch Optimize One Row Plan after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch Optimize One Row Plan has no effect.
25/02/13 17:21:49 TRACE AQEOptimizer: Fixed point reached for batch User Provided Runtime Optimizers after 1 iterations.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch User Provided Runtime Optimizers has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 6
Total time: 0.017513 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:49 TRACE PlanChangeLogger: Batch AQE Query Post Planner Strategy Rules has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch AQE Replanning has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger: Batch AQE Query Stage Optimization has no effect.
25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Applying Rule org.apache.spark.sql.execution.CollapseCodegenStages ===
 CollectLimitollectLimit 21
!+- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- *(2) Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
    +- ShuffleQueryStagehuffleQueryStage 0
       +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
          +- *(1) Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,GrileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 TRACE PlanChangeLogger:
=== Result of Batch AQE Post Stage Creation ===
 CollectLimitollectLimit 21
!+- Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]   +- *(2) Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
    +- ShuffleQueryStagehuffleQueryStage 0
       +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_idxchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
          +- *(1) Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as intilter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
             +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,GrileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:49 DEBUG WholeStageCodegenExec:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] project_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     project_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       // common sub-expressions
/* 029 */
/* 030 */       boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 031 */       UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 032 */       null : (inputadapter_row_0.getUTF8String(0));
/* 033 */       UTF8String project_value_0;
/* 034 */       if (inputadapter_isNull_0) {
/* 035 */         project_value_0 = UTF8String.fromString("NULL");
/* 036 */       } else {
/* 037 */         project_value_0 = inputadapter_value_0;
/* 038 */       }
/* 039 */       boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 040 */       UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 041 */       null : (inputadapter_row_0.getUTF8String(1));
/* 042 */       UTF8String project_value_2;
/* 043 */       if (inputadapter_isNull_1) {
/* 044 */         project_value_2 = UTF8String.fromString("NULL");
/* 045 */       } else {
/* 046 */         project_value_2 = inputadapter_value_1;
/* 047 */       }
/* 048 */       boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 049 */       UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 050 */       null : (inputadapter_row_0.getUTF8String(2));
/* 051 */       UTF8String project_value_4;
/* 052 */       if (inputadapter_isNull_2) {
/* 053 */         project_value_4 = UTF8String.fromString("NULL");
/* 054 */       } else {
/* 055 */         project_value_4 = inputadapter_value_2;
/* 056 */       }
/* 057 */       UTF8String inputadapter_value_3 = inputadapter_row_0.getUTF8String(3);
/* 058 */       boolean project_isNull_7 = false;
/* 059 */       int project_value_7 = -1;
/* 060 */       if (!false) {
/* 061 */         UTF8String.IntWrapper project_intWrapper_0 = new UTF8String.IntWrapper();
/* 062 */         if (inputadapter_value_3.toInt(project_intWrapper_0)) {
/* 063 */           project_value_7 = project_intWrapper_0.value;
/* 064 */         } else {
/* 065 */           project_isNull_7 = true;
/* 066 */         }
/* 067 */         project_intWrapper_0 = null;
/* 068 */       }
/* 069 */       UTF8String project_value_6;
/* 070 */       if (project_isNull_7) {
/* 071 */         project_value_6 = UTF8String.fromString("NULL");
/* 072 */       } else {
/* 073 */         project_value_6 = UTF8String.fromString(String.valueOf(project_value_7));
/* 074 */       }
/* 075 */       boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 076 */       UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 077 */       null : (inputadapter_row_0.getUTF8String(4));
/* 078 */       UTF8String project_value_9;
/* 079 */       if (inputadapter_isNull_4) {
/* 080 */         project_value_9 = UTF8String.fromString("NULL");
/* 081 */       } else {
/* 082 */         project_value_9 = inputadapter_value_4;
/* 083 */       }
/* 084 */       boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 085 */       UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 086 */       null : (inputadapter_row_0.getUTF8String(5));
/* 087 */       UTF8String project_value_11;
/* 088 */       if (inputadapter_isNull_5) {
/* 089 */         project_value_11 = UTF8String.fromString("NULL");
/* 090 */       } else {
/* 091 */         project_value_11 = inputadapter_value_5;
/* 092 */       }
/* 093 */       boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 094 */       UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 095 */       null : (inputadapter_row_0.getUTF8String(6));
/* 096 */       UTF8String project_value_13;
/* 097 */       if (inputadapter_isNull_6) {
/* 098 */         project_value_13 = UTF8String.fromString("NULL");
/* 099 */       } else {
/* 100 */         project_value_13 = inputadapter_value_6;
/* 101 */       }
/* 102 */       boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 103 */       UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 104 */       null : (inputadapter_row_0.getUTF8String(7));
/* 105 */       UTF8String project_value_15;
/* 106 */       if (inputadapter_isNull_7) {
/* 107 */         project_value_15 = UTF8String.fromString("NULL");
/* 108 */       } else {
/* 109 */         project_value_15 = inputadapter_value_7;
/* 110 */       }
/* 111 */       boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 112 */       UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 113 */       null : (inputadapter_row_0.getUTF8String(8));
/* 114 */       UTF8String project_value_17;
/* 115 */       if (inputadapter_isNull_8) {
/* 116 */         project_value_17 = UTF8String.fromString("NULL");
/* 117 */       } else {
/* 118 */         project_value_17 = inputadapter_value_8;
/* 119 */       }
/* 120 */       boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 121 */       UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 122 */       null : (inputadapter_row_0.getUTF8String(9));
/* 123 */       UTF8String project_value_19;
/* 124 */       if (inputadapter_isNull_9) {
/* 125 */         project_value_19 = UTF8String.fromString("NULL");
/* 126 */       } else {
/* 127 */         project_value_19 = inputadapter_value_9;
/* 128 */       }
/* 129 */       boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 130 */       UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 131 */       null : (inputadapter_row_0.getUTF8String(10));
/* 132 */       UTF8String project_value_21;
/* 133 */       if (inputadapter_isNull_10) {
/* 134 */         project_value_21 = UTF8String.fromString("NULL");
/* 135 */       } else {
/* 136 */         project_value_21 = inputadapter_value_10;
/* 137 */       }
/* 138 */       boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 139 */       UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 140 */       null : (inputadapter_row_0.getUTF8String(11));
/* 141 */       UTF8String project_value_23;
/* 142 */       if (inputadapter_isNull_11) {
/* 143 */         project_value_23 = UTF8String.fromString("NULL");
/* 144 */       } else {
/* 145 */         project_value_23 = inputadapter_value_11;
/* 146 */       }
/* 147 */       boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 148 */       UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 149 */       null : (inputadapter_row_0.getUTF8String(12));
/* 150 */       UTF8String project_value_25;
/* 151 */       if (inputadapter_isNull_12) {
/* 152 */         project_value_25 = UTF8String.fromString("NULL");
/* 153 */       } else {
/* 154 */         project_value_25 = inputadapter_value_12;
/* 155 */       }
/* 156 */       project_mutableStateArray_0[0].reset();
/* 157 */
/* 158 */       project_mutableStateArray_0[0].write(0, project_value_0);
/* 159 */
/* 160 */       project_mutableStateArray_0[0].write(1, project_value_2);
/* 161 */
/* 162 */       project_mutableStateArray_0[0].write(2, project_value_4);
/* 163 */
/* 164 */       project_mutableStateArray_0[0].write(3, project_value_6);
/* 165 */
/* 166 */       project_mutableStateArray_0[0].write(4, project_value_9);
/* 167 */
/* 168 */       project_mutableStateArray_0[0].write(5, project_value_11);
/* 169 */
/* 170 */       project_mutableStateArray_0[0].write(6, project_value_13);
/* 171 */
/* 172 */       project_mutableStateArray_0[0].write(7, project_value_15);
/* 173 */
/* 174 */       project_mutableStateArray_0[0].write(8, project_value_17);
/* 175 */
/* 176 */       project_mutableStateArray_0[0].write(9, project_value_19);
/* 177 */
/* 178 */       project_mutableStateArray_0[0].write(10, project_value_21);
/* 179 */
/* 180 */       project_mutableStateArray_0[0].write(11, project_value_23);
/* 181 */
/* 182 */       project_mutableStateArray_0[0].write(12, project_value_25);
/* 183 */       append((project_mutableStateArray_0[0].getRow()));
/* 184 */       if (shouldStop()) return;
/* 185 */     }
/* 186 */   }
/* 187 */
/* 188 */ }

25/02/13 17:21:49 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] project_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     project_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       // common sub-expressions
/* 029 */
/* 030 */       boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 031 */       UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 032 */       null : (inputadapter_row_0.getUTF8String(0));
/* 033 */       UTF8String project_value_0;
/* 034 */       if (inputadapter_isNull_0) {
/* 035 */         project_value_0 = UTF8String.fromString("NULL");
/* 036 */       } else {
/* 037 */         project_value_0 = inputadapter_value_0;
/* 038 */       }
/* 039 */       boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 040 */       UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 041 */       null : (inputadapter_row_0.getUTF8String(1));
/* 042 */       UTF8String project_value_2;
/* 043 */       if (inputadapter_isNull_1) {
/* 044 */         project_value_2 = UTF8String.fromString("NULL");
/* 045 */       } else {
/* 046 */         project_value_2 = inputadapter_value_1;
/* 047 */       }
/* 048 */       boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 049 */       UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 050 */       null : (inputadapter_row_0.getUTF8String(2));
/* 051 */       UTF8String project_value_4;
/* 052 */       if (inputadapter_isNull_2) {
/* 053 */         project_value_4 = UTF8String.fromString("NULL");
/* 054 */       } else {
/* 055 */         project_value_4 = inputadapter_value_2;
/* 056 */       }
/* 057 */       UTF8String inputadapter_value_3 = inputadapter_row_0.getUTF8String(3);
/* 058 */       boolean project_isNull_7 = false;
/* 059 */       int project_value_7 = -1;
/* 060 */       if (!false) {
/* 061 */         UTF8String.IntWrapper project_intWrapper_0 = new UTF8String.IntWrapper();
/* 062 */         if (inputadapter_value_3.toInt(project_intWrapper_0)) {
/* 063 */           project_value_7 = project_intWrapper_0.value;
/* 064 */         } else {
/* 065 */           project_isNull_7 = true;
/* 066 */         }
/* 067 */         project_intWrapper_0 = null;
/* 068 */       }
/* 069 */       UTF8String project_value_6;
/* 070 */       if (project_isNull_7) {
/* 071 */         project_value_6 = UTF8String.fromString("NULL");
/* 072 */       } else {
/* 073 */         project_value_6 = UTF8String.fromString(String.valueOf(project_value_7));
/* 074 */       }
/* 075 */       boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 076 */       UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 077 */       null : (inputadapter_row_0.getUTF8String(4));
/* 078 */       UTF8String project_value_9;
/* 079 */       if (inputadapter_isNull_4) {
/* 080 */         project_value_9 = UTF8String.fromString("NULL");
/* 081 */       } else {
/* 082 */         project_value_9 = inputadapter_value_4;
/* 083 */       }
/* 084 */       boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 085 */       UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 086 */       null : (inputadapter_row_0.getUTF8String(5));
/* 087 */       UTF8String project_value_11;
/* 088 */       if (inputadapter_isNull_5) {
/* 089 */         project_value_11 = UTF8String.fromString("NULL");
/* 090 */       } else {
/* 091 */         project_value_11 = inputadapter_value_5;
/* 092 */       }
/* 093 */       boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 094 */       UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 095 */       null : (inputadapter_row_0.getUTF8String(6));
/* 096 */       UTF8String project_value_13;
/* 097 */       if (inputadapter_isNull_6) {
/* 098 */         project_value_13 = UTF8String.fromString("NULL");
/* 099 */       } else {
/* 100 */         project_value_13 = inputadapter_value_6;
/* 101 */       }
/* 102 */       boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 103 */       UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 104 */       null : (inputadapter_row_0.getUTF8String(7));
/* 105 */       UTF8String project_value_15;
/* 106 */       if (inputadapter_isNull_7) {
/* 107 */         project_value_15 = UTF8String.fromString("NULL");
/* 108 */       } else {
/* 109 */         project_value_15 = inputadapter_value_7;
/* 110 */       }
/* 111 */       boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 112 */       UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 113 */       null : (inputadapter_row_0.getUTF8String(8));
/* 114 */       UTF8String project_value_17;
/* 115 */       if (inputadapter_isNull_8) {
/* 116 */         project_value_17 = UTF8String.fromString("NULL");
/* 117 */       } else {
/* 118 */         project_value_17 = inputadapter_value_8;
/* 119 */       }
/* 120 */       boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 121 */       UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 122 */       null : (inputadapter_row_0.getUTF8String(9));
/* 123 */       UTF8String project_value_19;
/* 124 */       if (inputadapter_isNull_9) {
/* 125 */         project_value_19 = UTF8String.fromString("NULL");
/* 126 */       } else {
/* 127 */         project_value_19 = inputadapter_value_9;
/* 128 */       }
/* 129 */       boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 130 */       UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 131 */       null : (inputadapter_row_0.getUTF8String(10));
/* 132 */       UTF8String project_value_21;
/* 133 */       if (inputadapter_isNull_10) {
/* 134 */         project_value_21 = UTF8String.fromString("NULL");
/* 135 */       } else {
/* 136 */         project_value_21 = inputadapter_value_10;
/* 137 */       }
/* 138 */       boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 139 */       UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 140 */       null : (inputadapter_row_0.getUTF8String(11));
/* 141 */       UTF8String project_value_23;
/* 142 */       if (inputadapter_isNull_11) {
/* 143 */         project_value_23 = UTF8String.fromString("NULL");
/* 144 */       } else {
/* 145 */         project_value_23 = inputadapter_value_11;
/* 146 */       }
/* 147 */       boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 148 */       UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 149 */       null : (inputadapter_row_0.getUTF8String(12));
/* 150 */       UTF8String project_value_25;
/* 151 */       if (inputadapter_isNull_12) {
/* 152 */         project_value_25 = UTF8String.fromString("NULL");
/* 153 */       } else {
/* 154 */         project_value_25 = inputadapter_value_12;
/* 155 */       }
/* 156 */       project_mutableStateArray_0[0].reset();
/* 157 */
/* 158 */       project_mutableStateArray_0[0].write(0, project_value_0);
/* 159 */
/* 160 */       project_mutableStateArray_0[0].write(1, project_value_2);
/* 161 */
/* 162 */       project_mutableStateArray_0[0].write(2, project_value_4);
/* 163 */
/* 164 */       project_mutableStateArray_0[0].write(3, project_value_6);
/* 165 */
/* 166 */       project_mutableStateArray_0[0].write(4, project_value_9);
/* 167 */
/* 168 */       project_mutableStateArray_0[0].write(5, project_value_11);
/* 169 */
/* 170 */       project_mutableStateArray_0[0].write(6, project_value_13);
/* 171 */
/* 172 */       project_mutableStateArray_0[0].write(7, project_value_15);
/* 173 */
/* 174 */       project_mutableStateArray_0[0].write(8, project_value_17);
/* 175 */
/* 176 */       project_mutableStateArray_0[0].write(9, project_value_19);
/* 177 */
/* 178 */       project_mutableStateArray_0[0].write(10, project_value_21);
/* 179 */
/* 180 */       project_mutableStateArray_0[0].write(11, project_value_23);
/* 181 */
/* 182 */       project_mutableStateArray_0[0].write(12, project_value_25);
/* 183 */       append((project_mutableStateArray_0[0].getRow()));
/* 184 */       if (shouldStop()) return;
/* 185 */     }
/* 186 */   }
/* 187 */
/* 188 */ }

25/02/13 17:21:49 INFO CodeGenerator: Code generated in 25.6833 ms
25/02/13 17:21:49 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$doExecute$4$adapted
25/02/13 17:21:49 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$doExecute$4$adapted) is now cleaned +++
25/02/13 17:21:49 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$executeTake$2
25/02/13 17:21:49 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$executeTake$2) is now cleaned +++
25/02/13 17:21:49 DEBUG ClosureCleaner: Cleaning indylambda closure: $anonfun$runJob$5
25/02/13 17:21:49 DEBUG ClosureCleaner:  +++ indylambda closure ($anonfun$runJob$5) is now cleaned +++
25/02/13 17:21:49 INFO SparkContext: Starting job: showString at <unknown>:0
25/02/13 17:21:49 DEBUG DAGScheduler: eagerlyComputePartitionsForRddAndAncestors for RDD 40 took 0.000164 seconds
25/02/13 17:21:50 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:50 DEBUG DAGScheduler: Merging stage rdd profiles: Set()
25/02/13 17:21:50 INFO DAGScheduler: Got job 4 (showString at <unknown>:0) with 1 output partitions
25/02/13 17:21:50 INFO DAGScheduler: Final stage: ResultStage 5 (showString at <unknown>:0)
25/02/13 17:21:50 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 4)
25/02/13 17:21:50 INFO DAGScheduler: Missing parents: List()
25/02/13 17:21:50 DEBUG DAGScheduler: submitStage(ResultStage 5 (name=showString at <unknown>:0;jobs=4))
25/02/13 17:21:50 DEBUG DAGScheduler: missing: List()
25/02/13 17:21:50 INFO DAGScheduler: Submitting ResultStage 5 (MapPartitionsRDD[40] at showString at <unknown>:0), which has no missing parents
25/02/13 17:21:50 DEBUG DAGScheduler: submitMissingTasks(ResultStage 5)
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to put broadcast_11
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_11
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_11
25/02/13 17:21:50 INFO MemoryStore: Block broadcast_11 stored as values in memory (estimated size 16.2 KiB, free 433.7 MiB)
25/02/13 17:21:50 DEBUG BlockManager: Put block broadcast_11 locally took 3 ms
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_11
25/02/13 17:21:50 DEBUG BlockManager: Putting block broadcast_11 without replication took 7 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(292)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 292
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to put broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 292
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(297)
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 297
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 297
25/02/13 17:21:50 INFO MemoryStore: Block broadcast_11_piece0 stored as bytes in memory (estimated size 6.5 KiB, free 433.7 MiB)
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(243)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 243
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 243
25/02/13 17:21:50 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_11_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(244)
25/02/13 17:21:50 INFO BlockManagerInfo: Added broadcast_11_piece0 in memory on hy80:50377 (size: 6.5 KiB, free: 434.3 MiB)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 244
25/02/13 17:21:50 DEBUG BlockManagerMaster: Updated info of block broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 244
25/02/13 17:21:50 DEBUG BlockManager: Told master about block broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(260)
25/02/13 17:21:50 DEBUG BlockManager: Put block broadcast_11_piece0 locally took 5 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 260
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 releasing lock for broadcast_11_piece0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 260
25/02/13 17:21:50 DEBUG BlockManager: Putting block broadcast_11_piece0 without replication took 15 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(299)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 299
25/02/13 17:21:50 INFO SparkContext: Created broadcast 11 from broadcast at DAGScheduler.scala:1585
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 299
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(257)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 257
25/02/13 17:21:50 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[40] at showString at <unknown>:0) (first 15 tasks are for partitions Vector(0))
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 257
25/02/13 17:21:50 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks resource profile 0
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(314)
25/02/13 17:21:50 DEBUG TaskSetManager: Epoch for TaskSet 5.0: 2
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 314
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 314
25/02/13 17:21:50 DEBUG TaskSetManager: Adding pending tasks took 2 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(295)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 295
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 295
25/02/13 17:21:50 DEBUG TaskSetManager: Valid locality levels for TaskSet 5.0: NODE_LOCAL, ANY
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(305)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 305
25/02/13 17:21:50 DEBUG TaskSchedulerImpl: parentName: , name: TaskSet_5.0, runningTasks: 0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 305
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(250)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 250
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 250
25/02/13 17:21:50 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 4) (hy80, executor driver, partition 0, NODE_LOCAL, 8999 bytes)
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(303)
25/02/13 17:21:50 DEBUG TaskSetManager: No tasks for locality level NODE_LOCAL, so moving to locality level ANY
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 303
25/02/13 17:21:50 INFO Executor: Running task 0.0 in stage 5.0 (TID 4)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 303
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(293)
25/02/13 17:21:50 DEBUG ExecutorMetricsPoller: stageTCMP: (5, 0) -> 1
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 293
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 293
25/02/13 17:21:50 DEBUG BlockManager: Getting local block broadcast_11
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(306)
25/02/13 17:21:50 TRACE BlockInfoManager: Task 4 trying to acquire read lock for broadcast_11
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 306
25/02/13 17:21:50 TRACE BlockInfoManager: Task 4 acquired read lock for broadcast_11
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 306
25/02/13 17:21:50 DEBUG BlockManager: Level for block broadcast_11 is StorageLevel(disk, memory, deserialized, 1 replicas)
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(258)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 258
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 258
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(248)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 248
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 248
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(256)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 256
25/02/13 17:21:50 DEBUG MapOutputTrackerMaster: Fetching outputs for shuffle 1
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 256
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(298)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 298
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 298
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(246)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 246
25/02/13 17:21:50 DEBUG MapOutputTrackerMaster: Convert map statuses for shuffle 1, mappers 0-1, partitions 0-1
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 246
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(287)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 287
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 287
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(302)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 302
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 302
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(254)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 254
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 254
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(289)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 289
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 289
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(320)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 320
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 320
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(318)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 318
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 318
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(317)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 317
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 317
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(301)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 301
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 301
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanBroadcast(10)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning broadcast 10
25/02/13 17:21:50 DEBUG TorrentBroadcast: Unpersisting TorrentBroadcast 10
25/02/13 17:21:50 DEBUG BlockManagerStorageEndpoint: removing broadcast 10
25/02/13 17:21:50 DEBUG BlockManager: Removing broadcast 10
25/02/13 17:21:50 DEBUG BlockManager: Removing block broadcast_10_piece0
25/02/13 17:21:50 DEBUG ShuffleBlockFetcherIterator: maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_10_piece0
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_10_piece0
25/02/13 17:21:50 DEBUG MemoryStore: Block broadcast_10_piece0 of size 10388 dropped from memory (free 454733612)
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_10_piece0
25/02/13 17:21:50 DEBUG BlockManagerMasterEndpoint: Updating block info on master broadcast_10_piece0 for BlockManagerId(driver, hy80, 50377, None)
25/02/13 17:21:50 INFO BlockManagerInfo: Removed broadcast_10_piece0 on hy80:50377 in memory (size: 10.1 KiB, free: 434.3 MiB)
25/02/13 17:21:50 DEBUG BlockManagerMaster: Updated info of block broadcast_10_piece0
25/02/13 17:21:50 DEBUG BlockManager: Told master about block broadcast_10_piece0
25/02/13 17:21:50 DEBUG BlockManager: Removing block broadcast_10
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to acquire write lock for broadcast_10
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 acquired write lock for broadcast_10
25/02/13 17:21:50 DEBUG MemoryStore: Block broadcast_10 of size 24200 dropped from memory (free 454757812)
25/02/13 17:21:50 TRACE BlockInfoManager: Task -1024 trying to remove block broadcast_10
25/02/13 17:21:50 INFO ShuffleBlockFetcherIterator: Getting 1 (21.7 KiB) non-empty blocks including 1 (21.7 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
25/02/13 17:21:50 DEBUG BlockManagerStorageEndpoint: Done removing broadcast 10, response is 0
25/02/13 17:21:50 DEBUG BlockManagerStorageEndpoint: Sent response: 0 to hy80:50328
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned broadcast 10
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(315)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 315
25/02/13 17:21:50 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 16 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 315
25/02/13 17:21:50 DEBUG ShuffleBlockFetcherIterator: Start fetching local blocks: (shuffle_1_3_0,0)
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(294)
25/02/13 17:21:50 DEBUG BlockManager: Getting local shuffle block shuffle_1_3_0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 294
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 294
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(251)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 251
25/02/13 17:21:50 DEBUG ShuffleBlockFetcherIterator: Got local blocks in 21 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 251
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(253)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 253
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 253
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(310)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 310
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 310
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(255)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 255
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 255
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(252)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 252
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 252
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(245)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 245
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 245
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(249)
25/02/13 17:21:50 DEBUG CodeGenerator:
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator inputadapter_input_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] project_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     inputadapter_input_0 = inputs[0];
/* 020 */     project_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(13, 416);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while ( inputadapter_input_0.hasNext()) {
/* 026 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 027 */
/* 028 */       // common sub-expressions
/* 029 */
/* 030 */       boolean inputadapter_isNull_0 = inputadapter_row_0.isNullAt(0);
/* 031 */       UTF8String inputadapter_value_0 = inputadapter_isNull_0 ?
/* 032 */       null : (inputadapter_row_0.getUTF8String(0));
/* 033 */       UTF8String project_value_0;
/* 034 */       if (inputadapter_isNull_0) {
/* 035 */         project_value_0 = UTF8String.fromString("NULL");
/* 036 */       } else {
/* 037 */         project_value_0 = inputadapter_value_0;
/* 038 */       }
/* 039 */       boolean inputadapter_isNull_1 = inputadapter_row_0.isNullAt(1);
/* 040 */       UTF8String inputadapter_value_1 = inputadapter_isNull_1 ?
/* 041 */       null : (inputadapter_row_0.getUTF8String(1));
/* 042 */       UTF8String project_value_2;
/* 043 */       if (inputadapter_isNull_1) {
/* 044 */         project_value_2 = UTF8String.fromString("NULL");
/* 045 */       } else {
/* 046 */         project_value_2 = inputadapter_value_1;
/* 047 */       }
/* 048 */       boolean inputadapter_isNull_2 = inputadapter_row_0.isNullAt(2);
/* 049 */       UTF8String inputadapter_value_2 = inputadapter_isNull_2 ?
/* 050 */       null : (inputadapter_row_0.getUTF8String(2));
/* 051 */       UTF8String project_value_4;
/* 052 */       if (inputadapter_isNull_2) {
/* 053 */         project_value_4 = UTF8String.fromString("NULL");
/* 054 */       } else {
/* 055 */         project_value_4 = inputadapter_value_2;
/* 056 */       }
/* 057 */       UTF8String inputadapter_value_3 = inputadapter_row_0.getUTF8String(3);
/* 058 */       boolean project_isNull_7 = false;
/* 059 */       int project_value_7 = -1;
/* 060 */       if (!false) {
/* 061 */         UTF8String.IntWrapper project_intWrapper_0 = new UTF8String.IntWrapper();
/* 062 */         if (inputadapter_value_3.toInt(project_intWrapper_0)) {
/* 063 */           project_value_7 = project_intWrapper_0.value;
/* 064 */         } else {
/* 065 */           project_isNull_7 = true;
/* 066 */         }
/* 067 */         project_intWrapper_0 = null;
/* 068 */       }
/* 069 */       UTF8String project_value_6;
/* 070 */       if (project_isNull_7) {
/* 071 */         project_value_6 = UTF8String.fromString("NULL");
/* 072 */       } else {
/* 073 */         project_value_6 = UTF8String.fromString(String.valueOf(project_value_7));
/* 074 */       }
/* 075 */       boolean inputadapter_isNull_4 = inputadapter_row_0.isNullAt(4);
/* 076 */       UTF8String inputadapter_value_4 = inputadapter_isNull_4 ?
/* 077 */       null : (inputadapter_row_0.getUTF8String(4));
/* 078 */       UTF8String project_value_9;
/* 079 */       if (inputadapter_isNull_4) {
/* 080 */         project_value_9 = UTF8String.fromString("NULL");
/* 081 */       } else {
/* 082 */         project_value_9 = inputadapter_value_4;
/* 083 */       }
/* 084 */       boolean inputadapter_isNull_5 = inputadapter_row_0.isNullAt(5);
/* 085 */       UTF8String inputadapter_value_5 = inputadapter_isNull_5 ?
/* 086 */       null : (inputadapter_row_0.getUTF8String(5));
/* 087 */       UTF8String project_value_11;
/* 088 */       if (inputadapter_isNull_5) {
/* 089 */         project_value_11 = UTF8String.fromString("NULL");
/* 090 */       } else {
/* 091 */         project_value_11 = inputadapter_value_5;
/* 092 */       }
/* 093 */       boolean inputadapter_isNull_6 = inputadapter_row_0.isNullAt(6);
/* 094 */       UTF8String inputadapter_value_6 = inputadapter_isNull_6 ?
/* 095 */       null : (inputadapter_row_0.getUTF8String(6));
/* 096 */       UTF8String project_value_13;
/* 097 */       if (inputadapter_isNull_6) {
/* 098 */         project_value_13 = UTF8String.fromString("NULL");
/* 099 */       } else {
/* 100 */         project_value_13 = inputadapter_value_6;
/* 101 */       }
/* 102 */       boolean inputadapter_isNull_7 = inputadapter_row_0.isNullAt(7);
/* 103 */       UTF8String inputadapter_value_7 = inputadapter_isNull_7 ?
/* 104 */       null : (inputadapter_row_0.getUTF8String(7));
/* 105 */       UTF8String project_value_15;
/* 106 */       if (inputadapter_isNull_7) {
/* 107 */         project_value_15 = UTF8String.fromString("NULL");
/* 108 */       } else {
/* 109 */         project_value_15 = inputadapter_value_7;
/* 110 */       }
/* 111 */       boolean inputadapter_isNull_8 = inputadapter_row_0.isNullAt(8);
/* 112 */       UTF8String inputadapter_value_8 = inputadapter_isNull_8 ?
/* 113 */       null : (inputadapter_row_0.getUTF8String(8));
/* 114 */       UTF8String project_value_17;
/* 115 */       if (inputadapter_isNull_8) {
/* 116 */         project_value_17 = UTF8String.fromString("NULL");
/* 117 */       } else {
/* 118 */         project_value_17 = inputadapter_value_8;
/* 119 */       }
/* 120 */       boolean inputadapter_isNull_9 = inputadapter_row_0.isNullAt(9);
/* 121 */       UTF8String inputadapter_value_9 = inputadapter_isNull_9 ?
/* 122 */       null : (inputadapter_row_0.getUTF8String(9));
/* 123 */       UTF8String project_value_19;
/* 124 */       if (inputadapter_isNull_9) {
/* 125 */         project_value_19 = UTF8String.fromString("NULL");
/* 126 */       } else {
/* 127 */         project_value_19 = inputadapter_value_9;
/* 128 */       }
/* 129 */       boolean inputadapter_isNull_10 = inputadapter_row_0.isNullAt(10);
/* 130 */       UTF8String inputadapter_value_10 = inputadapter_isNull_10 ?
/* 131 */       null : (inputadapter_row_0.getUTF8String(10));
/* 132 */       UTF8String project_value_21;
/* 133 */       if (inputadapter_isNull_10) {
/* 134 */         project_value_21 = UTF8String.fromString("NULL");
/* 135 */       } else {
/* 136 */         project_value_21 = inputadapter_value_10;
/* 137 */       }
/* 138 */       boolean inputadapter_isNull_11 = inputadapter_row_0.isNullAt(11);
/* 139 */       UTF8String inputadapter_value_11 = inputadapter_isNull_11 ?
/* 140 */       null : (inputadapter_row_0.getUTF8String(11));
/* 141 */       UTF8String project_value_23;
/* 142 */       if (inputadapter_isNull_11) {
/* 143 */         project_value_23 = UTF8String.fromString("NULL");
/* 144 */       } else {
/* 145 */         project_value_23 = inputadapter_value_11;
/* 146 */       }
/* 147 */       boolean inputadapter_isNull_12 = inputadapter_row_0.isNullAt(12);
/* 148 */       UTF8String inputadapter_value_12 = inputadapter_isNull_12 ?
/* 149 */       null : (inputadapter_row_0.getUTF8String(12));
/* 150 */       UTF8String project_value_25;
/* 151 */       if (inputadapter_isNull_12) {
/* 152 */         project_value_25 = UTF8String.fromString("NULL");
/* 153 */       } else {
/* 154 */         project_value_25 = inputadapter_value_12;
/* 155 */       }
/* 156 */       project_mutableStateArray_0[0].reset();
/* 157 */
/* 158 */       project_mutableStateArray_0[0].write(0, project_value_0);
/* 159 */
/* 160 */       project_mutableStateArray_0[0].write(1, project_value_2);
/* 161 */
/* 162 */       project_mutableStateArray_0[0].write(2, project_value_4);
/* 163 */
/* 164 */       project_mutableStateArray_0[0].write(3, project_value_6);
/* 165 */
/* 166 */       project_mutableStateArray_0[0].write(4, project_value_9);
/* 167 */
/* 168 */       project_mutableStateArray_0[0].write(5, project_value_11);
/* 169 */
/* 170 */       project_mutableStateArray_0[0].write(6, project_value_13);
/* 171 */
/* 172 */       project_mutableStateArray_0[0].write(7, project_value_15);
/* 173 */
/* 174 */       project_mutableStateArray_0[0].write(8, project_value_17);
/* 175 */
/* 176 */       project_mutableStateArray_0[0].write(9, project_value_19);
/* 177 */
/* 178 */       project_mutableStateArray_0[0].write(10, project_value_21);
/* 179 */
/* 180 */       project_mutableStateArray_0[0].write(11, project_value_23);
/* 181 */
/* 182 */       project_mutableStateArray_0[0].write(12, project_value_25);
/* 183 */       append((project_mutableStateArray_0[0].getRow()));
/* 184 */       if (shouldStop()) return;
/* 185 */     }
/* 186 */   }
/* 187 */
/* 188 */ }

25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 249
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 249
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(300)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 300
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 300
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(321)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 321
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 321
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(262)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 262
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 262
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(311)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 311
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 311
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(259)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 259
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 259
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(319)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 319
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 319
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(312)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 312
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 312
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(313)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 313
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 313
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(316)
25/02/13 17:21:50 INFO CodeGenerator: Code generated in 26.7174 ms
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 316
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 316
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(261)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 261
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 261
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(309)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 309
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 309
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(307)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 307
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 307
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(288)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 288
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 288
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(304)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 304
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 304
25/02/13 17:21:50 TRACE BlockInfoManager: Task 4 releasing lock for broadcast_11
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(296)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 296
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 296
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(291)
25/02/13 17:21:50 INFO Executor: Finished task 0.0 in stage 5.0 (TID 4). 5875 bytes result sent to driver
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 291
25/02/13 17:21:50 DEBUG ExecutorMetricsPoller: stageTCMP: (5, 0) -> 0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 291
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(290)
25/02/13 17:21:50 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 4) in 110 ms on hy80 (executor driver) (1/1)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 290
25/02/13 17:21:50 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool
25/02/13 17:21:50 INFO DAGScheduler: ResultStage 5 (showString at <unknown>:0) finished in 0.177 s
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 290
25/02/13 17:21:50 DEBUG DAGScheduler: After removal of stage 5, remaining stages = 1
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(247)
25/02/13 17:21:50 DEBUG DAGScheduler: After removal of stage 4, remaining stages = 0
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 247
25/02/13 17:21:50 INFO DAGScheduler: Job 4 is finished. Cancelling potential speculative or zombie tasks for this job
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 247
25/02/13 17:21:50 INFO TaskSchedulerImpl: Killing all running tasks in stage 5: Stage finished
25/02/13 17:21:50 DEBUG ContextCleaner: Got cleaning task CleanAccum(308)
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaning accumulator 308
25/02/13 17:21:50 INFO DAGScheduler: Job 4 finished: showString at <unknown>:0, took 0.208568 s
25/02/13 17:21:50 DEBUG ContextCleaner: Cleaned accumulator 308
25/02/13 17:21:50 DEBUG AdaptiveSparkPlanExec: Final plan:
CollectLimit 21
+- *(2) Project [toprettystring(Neighborhood#60, Some(America/New_York)) AS toprettystring(Neighborhood)#140, toprettystring(Building.Classification#61, Some(America/New_York)) AS toprettystring(Building.Classification)#141, toprettystring(Total.Units#62, Some(America/New_York)) AS toprettystring(Total.Units)#142, toprettystring(cast(Year_Built#63 as int), Some(America/New_York)) AS toprettystring(Year_Built)#143, toprettystring(Gross.SqFt#64, Some(America/New_York)) AS toprettystring(Gross.SqFt)#144, toprettystring(Estimated.Gross.Income#65, Some(America/New_York)) AS toprettystring(Estimated.Gross.Income)#145, toprettystring(Gross.Income.per.SqFt#66, Some(America/New_York)) AS toprettystring(Gross.Income.per.SqFt)#146, toprettystring(Estimated.Expense#67, Some(America/New_York)) AS toprettystring(Estimated.Expense)#147, toprettystring(Expense.per.SqFt#68, Some(America/New_York)) AS toprettystring(Expense.per.SqFt)#148, toprettystring(Net.Operating.Income#69, Some(America/New_York)) AS toprettystring(Net.Operating.Income)#149, toprettystring(Full.Market.Value#70, Some(America/New_York)) AS toprettystring(Full.Market.Value)#150, toprettystring(Market.Value.per.SqFt#71, Some(America/New_York)) AS toprettystring(Market.Value.per.SqFt)#151, toprettystring(Boro#72, Some(America/New_York)) AS toprettystring(Boro)#152]
   +- ShuffleQueryStage 0
      +- Exchange RoundRobinPartitioning(5), REPARTITION_BY_NUM, [plan_id=82]
         +- *(1) Filter (isnotnull(Year_Built#63) AND (cast(Year_Built#63 as int) > 2000))
            +- FileScan csv [Neighborhood#60,Building.Classification#61,Total.Units#62,Year_Built#63,Gross.SqFt#64,Estimated.Gross.Income#65,Gross.Income.per.SqFt#66,Estimated.Expense#67,Expense.per.SqFt#68,Net.Operating.Income#69,Full.Market.Value#70,Market.Value.per.SqFt#71,Boro#72] Batched: false, DataFilters: [isnotnull(Year_Built#63), (cast(Year_Built#63 as int) > 2000)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/C:/Users/Public.IT-PC/Downloads/spark/spark-3.5.4-bin-hadoop3/bi..., PartitionFilters: [], PushedFilters: [IsNotNull(Year_Built)], ReadSchema: struct<Neighborhood:string,Building.Classification:string,Total.Units:string,Year_Built:string,Gr...

25/02/13 17:21:50 TRACE package$ExpressionCanonicalizer: Fixed point reached for batch CleanExpressions after 1 iterations.
25/02/13 17:21:50 TRACE PlanChangeLogger: Batch CleanExpressions has no effect.
25/02/13 17:21:50 TRACE PlanChangeLogger:
=== Metrics of Executed Rules ===
Total number of runs: 1
Total time: 1.235E-4 seconds
Total number of effective runs: 0
Total time of effective runs: 0.0 seconds

25/02/13 17:21:50 DEBUG GenerateSafeProjection: code for createexternalrow(input[0, string, false].toString, input[1, string, false].toString, input[2, string, false].toString, input[3, string, false].toString, input[4, string, false].toString, input[5, string, false].toString, input[6, string, false].toString, input[7, string, false].toString, input[8, string, false].toString, input[9, string, false].toString, input[10, string, false].toString, input[11, string, false].toString, input[12, string, false].toString, StructField(toprettystring(Neighborhood),StringType,false), StructField(toprettystring(Building.Classification),StringType,false), StructField(toprettystring(Total.Units),StringType,false), StructField(toprettystring(Year_Built),StringType,false), StructField(toprettystring(Gross.SqFt),StringType,false), StructField(toprettystring(Estimated.Gross.Income),StringType,false), StructField(toprettystring(Gross.Income.per.SqFt),StringType,false), StructField(toprettystring(Estimated.Expense),StringType,false), StructField(toprettystring(Expense.per.SqFt),StringType,false), StructField(toprettystring(Net.Operating.Income),StringType,false), StructField(toprettystring(Full.Market.Value),StringType,false), ... 2 more fields):
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     Object[] values_0 = new Object[13];
/* 024 */     createExternalRow_0_0(i, values_0);
/* 025 */     createExternalRow_0_1(i, values_0);
/* 026 */     createExternalRow_0_2(i, values_0);
/* 027 */     createExternalRow_0_3(i, values_0);
/* 028 */     createExternalRow_0_4(i, values_0);
/* 029 */     final org.apache.spark.sql.Row value_0 = new org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema(values_0, ((org.apache.spark.sql.types.StructType) references[0] /* schema */));
/* 030 */     if (false) {
/* 031 */       mutableRow.setNullAt(0);
/* 032 */     } else {
/* 033 */
/* 034 */       mutableRow.update(0, value_0);
/* 035 */     }
/* 036 */
/* 037 */     return mutableRow;
/* 038 */   }
/* 039 */
/* 040 */
/* 041 */   private void createExternalRow_0_2(InternalRow i, Object[] values_0) {
/* 042 */
/* 043 */     UTF8String value_14 = i.getUTF8String(6);
/* 044 */     boolean isNull_13 = true;
/* 045 */     java.lang.String value_13 = null;
/* 046 */     isNull_13 = false;
/* 047 */     if (!isNull_13) {
/* 048 */
/* 049 */       Object funcResult_6 = null;
/* 050 */       funcResult_6 = value_14.toString();
/* 051 */       value_13 = (java.lang.String) funcResult_6;
/* 052 */
/* 053 */     }
/* 054 */     if (isNull_13) {
/* 055 */       values_0[6] = null;
/* 056 */     } else {
/* 057 */       values_0[6] = value_13;
/* 058 */     }
/* 059 */
/* 060 */     UTF8String value_16 = i.getUTF8String(7);
/* 061 */     boolean isNull_15 = true;
/* 062 */     java.lang.String value_15 = null;
/* 063 */     isNull_15 = false;
/* 064 */     if (!isNull_15) {
/* 065 */
/* 066 */       Object funcResult_7 = null;
/* 067 */       funcResult_7 = value_16.toString();
/* 068 */       value_15 = (java.lang.String) funcResult_7;
/* 069 */
/* 070 */     }
/* 071 */     if (isNull_15) {
/* 072 */       values_0[7] = null;
/* 073 */     } else {
/* 074 */       values_0[7] = value_15;
/* 075 */     }
/* 076 */
/* 077 */     UTF8String value_18 = i.getUTF8String(8);
/* 078 */     boolean isNull_17 = true;
/* 079 */     java.lang.String value_17 = null;
/* 080 */     isNull_17 = false;
/* 081 */     if (!isNull_17) {
/* 082 */
/* 083 */       Object funcResult_8 = null;
/* 084 */       funcResult_8 = value_18.toString();
/* 085 */       value_17 = (java.lang.String) funcResult_8;
/* 086 */
/* 087 */     }
/* 088 */     if (isNull_17) {
/* 089 */       values_0[8] = null;
/* 090 */     } else {
/* 091 */       values_0[8] = value_17;
/* 092 */     }
/* 093 */
/* 094 */   }
/* 095 */
/* 096 */
/* 097 */   private void createExternalRow_0_4(InternalRow i, Object[] values_0) {
/* 098 */
/* 099 */     UTF8String value_26 = i.getUTF8String(12);
/* 100 */     boolean isNull_25 = true;
/* 101 */     java.lang.String value_25 = null;
/* 102 */     isNull_25 = false;
/* 103 */     if (!isNull_25) {
/* 104 */
/* 105 */       Object funcResult_12 = null;
/* 106 */       funcResult_12 = value_26.toString();
/* 107 */       value_25 = (java.lang.String) funcResult_12;
/* 108 */
/* 109 */     }
/* 110 */     if (isNull_25) {
/* 111 */       values_0[12] = null;
/* 112 */     } else {
/* 113 */       values_0[12] = value_25;
/* 114 */     }
/* 115 */
/* 116 */   }
/* 117 */
/* 118 */
/* 119 */   private void createExternalRow_0_1(InternalRow i, Object[] values_0) {
/* 120 */
/* 121 */     UTF8String value_8 = i.getUTF8String(3);
/* 122 */     boolean isNull_7 = true;
/* 123 */     java.lang.String value_7 = null;
/* 124 */     isNull_7 = false;
/* 125 */     if (!isNull_7) {
/* 126 */
/* 127 */       Object funcResult_3 = null;
/* 128 */       funcResult_3 = value_8.toString();
/* 129 */       value_7 = (java.lang.String) funcResult_3;
/* 130 */
/* 131 */     }
/* 132 */     if (isNull_7) {
/* 133 */       values_0[3] = null;
/* 134 */     } else {
/* 135 */       values_0[3] = value_7;
/* 136 */     }
/* 137 */
/* 138 */     UTF8String value_10 = i.getUTF8String(4);
/* 139 */     boolean isNull_9 = true;
/* 140 */     java.lang.String value_9 = null;
/* 141 */     isNull_9 = false;
/* 142 */     if (!isNull_9) {
/* 143 */
/* 144 */       Object funcResult_4 = null;
/* 145 */       funcResult_4 = value_10.toString();
/* 146 */       value_9 = (java.lang.String) funcResult_4;
/* 147 */
/* 148 */     }
/* 149 */     if (isNull_9) {
/* 150 */       values_0[4] = null;
/* 151 */     } else {
/* 152 */       values_0[4] = value_9;
/* 153 */     }
/* 154 */
/* 155 */     UTF8String value_12 = i.getUTF8String(5);
/* 156 */     boolean isNull_11 = true;
/* 157 */     java.lang.String value_11 = null;
/* 158 */     isNull_11 = false;
/* 159 */     if (!isNull_11) {
/* 160 */
/* 161 */       Object funcResult_5 = null;
/* 162 */       funcResult_5 = value_12.toString();
/* 163 */       value_11 = (java.lang.String) funcResult_5;
/* 164 */
/* 165 */     }
/* 166 */     if (isNull_11) {
/* 167 */       values_0[5] = null;
/* 168 */     } else {
/* 169 */       values_0[5] = value_11;
/* 170 */     }
/* 171 */
/* 172 */   }
/* 173 */
/* 174 */
/* 175 */   private void createExternalRow_0_3(InternalRow i, Object[] values_0) {
/* 176 */
/* 177 */     UTF8String value_20 = i.getUTF8String(9);
/* 178 */     boolean isNull_19 = true;
/* 179 */     java.lang.String value_19 = null;
/* 180 */     isNull_19 = false;
/* 181 */     if (!isNull_19) {
/* 182 */
/* 183 */       Object funcResult_9 = null;
/* 184 */       funcResult_9 = value_20.toString();
/* 185 */       value_19 = (java.lang.String) funcResult_9;
/* 186 */
/* 187 */     }
/* 188 */     if (isNull_19) {
/* 189 */       values_0[9] = null;
/* 190 */     } else {
/* 191 */       values_0[9] = value_19;
/* 192 */     }
/* 193 */
/* 194 */     UTF8String value_22 = i.getUTF8String(10);
/* 195 */     boolean isNull_21 = true;
/* 196 */     java.lang.String value_21 = null;
/* 197 */     isNull_21 = false;
/* 198 */     if (!isNull_21) {
/* 199 */
/* 200 */       Object funcResult_10 = null;
/* 201 */       funcResult_10 = value_22.toString();
/* 202 */       value_21 = (java.lang.String) funcResult_10;
/* 203 */
/* 204 */     }
/* 205 */     if (isNull_21) {
/* 206 */       values_0[10] = null;
/* 207 */     } else {
/* 208 */       values_0[10] = value_21;
/* 209 */     }
/* 210 */
/* 211 */     UTF8String value_24 = i.getUTF8String(11);
/* 212 */     boolean isNull_23 = true;
/* 213 */     java.lang.String value_23 = null;
/* 214 */     isNull_23 = false;
/* 215 */     if (!isNull_23) {
/* 216 */
/* 217 */       Object funcResult_11 = null;
/* 218 */       funcResult_11 = value_24.toString();
/* 219 */       value_23 = (java.lang.String) funcResult_11;
/* 220 */
/* 221 */     }
/* 222 */     if (isNull_23) {
/* 223 */       values_0[11] = null;
/* 224 */     } else {
/* 225 */       values_0[11] = value_23;
/* 226 */     }
/* 227 */
/* 228 */   }
/* 229 */
/* 230 */
/* 231 */   private void createExternalRow_0_0(InternalRow i, Object[] values_0) {
/* 232 */
/* 233 */     UTF8String value_2 = i.getUTF8String(0);
/* 234 */     boolean isNull_1 = true;
/* 235 */     java.lang.String value_1 = null;
/* 236 */     isNull_1 = false;
/* 237 */     if (!isNull_1) {
/* 238 */
/* 239 */       Object funcResult_0 = null;
/* 240 */       funcResult_0 = value_2.toString();
/* 241 */       value_1 = (java.lang.String) funcResult_0;
/* 242 */
/* 243 */     }
/* 244 */     if (isNull_1) {
/* 245 */       values_0[0] = null;
/* 246 */     } else {
/* 247 */       values_0[0] = value_1;
/* 248 */     }
/* 249 */
/* 250 */     UTF8String value_4 = i.getUTF8String(1);
/* 251 */     boolean isNull_3 = true;
/* 252 */     java.lang.String value_3 = null;
/* 253 */     isNull_3 = false;
/* 254 */     if (!isNull_3) {
/* 255 */
/* 256 */       Object funcResult_1 = null;
/* 257 */       funcResult_1 = value_4.toString();
/* 258 */       value_3 = (java.lang.String) funcResult_1;
/* 259 */
/* 260 */     }
/* 261 */     if (isNull_3) {
/* 262 */       values_0[1] = null;
/* 263 */     } else {
/* 264 */       values_0[1] = value_3;
/* 265 */     }
/* 266 */
/* 267 */     UTF8String value_6 = i.getUTF8String(2);
/* 268 */     boolean isNull_5 = true;
/* 269 */     java.lang.String value_5 = null;
/* 270 */     isNull_5 = false;
/* 271 */     if (!isNull_5) {
/* 272 */
/* 273 */       Object funcResult_2 = null;
/* 274 */       funcResult_2 = value_6.toString();
/* 275 */       value_5 = (java.lang.String) funcResult_2;
/* 276 */
/* 277 */     }
/* 278 */     if (isNull_5) {
/* 279 */       values_0[2] = null;
/* 280 */     } else {
/* 281 */       values_0[2] = value_5;
/* 282 */     }
/* 283 */
/* 284 */   }
/* 285 */
/* 286 */ }

25/02/13 17:21:50 DEBUG CodeGenerator:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     Object[] values_0 = new Object[13];
/* 024 */     createExternalRow_0_0(i, values_0);
/* 025 */     createExternalRow_0_1(i, values_0);
/* 026 */     createExternalRow_0_2(i, values_0);
/* 027 */     createExternalRow_0_3(i, values_0);
/* 028 */     createExternalRow_0_4(i, values_0);
/* 029 */     final org.apache.spark.sql.Row value_0 = new org.apache.spark.sql.catalyst.expressions.GenericRowWithSchema(values_0, ((org.apache.spark.sql.types.StructType) references[0] /* schema */));
/* 030 */     if (false) {
/* 031 */       mutableRow.setNullAt(0);
/* 032 */     } else {
/* 033 */
/* 034 */       mutableRow.update(0, value_0);
/* 035 */     }
/* 036 */
/* 037 */     return mutableRow;
/* 038 */   }
/* 039 */
/* 040 */
/* 041 */   private void createExternalRow_0_2(InternalRow i, Object[] values_0) {
/* 042 */
/* 043 */     UTF8String value_14 = i.getUTF8String(6);
/* 044 */     boolean isNull_13 = true;
/* 045 */     java.lang.String value_13 = null;
/* 046 */     isNull_13 = false;
/* 047 */     if (!isNull_13) {
/* 048 */
/* 049 */       Object funcResult_6 = null;
/* 050 */       funcResult_6 = value_14.toString();
/* 051 */       value_13 = (java.lang.String) funcResult_6;
/* 052 */
/* 053 */     }
/* 054 */     if (isNull_13) {
/* 055 */       values_0[6] = null;
/* 056 */     } else {
/* 057 */       values_0[6] = value_13;
/* 058 */     }
/* 059 */
/* 060 */     UTF8String value_16 = i.getUTF8String(7);
/* 061 */     boolean isNull_15 = true;
/* 062 */     java.lang.String value_15 = null;
/* 063 */     isNull_15 = false;
/* 064 */     if (!isNull_15) {
/* 065 */
/* 066 */       Object funcResult_7 = null;
/* 067 */       funcResult_7 = value_16.toString();
/* 068 */       value_15 = (java.lang.String) funcResult_7;
/* 069 */
/* 070 */     }
/* 071 */     if (isNull_15) {
/* 072 */       values_0[7] = null;
/* 073 */     } else {
/* 074 */       values_0[7] = value_15;
/* 075 */     }
/* 076 */
/* 077 */     UTF8String value_18 = i.getUTF8String(8);
/* 078 */     boolean isNull_17 = true;
/* 079 */     java.lang.String value_17 = null;
/* 080 */     isNull_17 = false;
/* 081 */     if (!isNull_17) {
/* 082 */
/* 083 */       Object funcResult_8 = null;
/* 084 */       funcResult_8 = value_18.toString();
/* 085 */       value_17 = (java.lang.String) funcResult_8;
/* 086 */
/* 087 */     }
/* 088 */     if (isNull_17) {
/* 089 */       values_0[8] = null;
/* 090 */     } else {
/* 091 */       values_0[8] = value_17;
/* 092 */     }
/* 093 */
/* 094 */   }
/* 095 */
/* 096 */
/* 097 */   private void createExternalRow_0_4(InternalRow i, Object[] values_0) {
/* 098 */
/* 099 */     UTF8String value_26 = i.getUTF8String(12);
/* 100 */     boolean isNull_25 = true;
/* 101 */     java.lang.String value_25 = null;
/* 102 */     isNull_25 = false;
/* 103 */     if (!isNull_25) {
/* 104 */
/* 105 */       Object funcResult_12 = null;
/* 106 */       funcResult_12 = value_26.toString();
/* 107 */       value_25 = (java.lang.String) funcResult_12;
/* 108 */
/* 109 */     }
/* 110 */     if (isNull_25) {
/* 111 */       values_0[12] = null;
/* 112 */     } else {
/* 113 */       values_0[12] = value_25;
/* 114 */     }
/* 115 */
/* 116 */   }
/* 117 */
/* 118 */
/* 119 */   private void createExternalRow_0_1(InternalRow i, Object[] values_0) {
/* 120 */
/* 121 */     UTF8String value_8 = i.getUTF8String(3);
/* 122 */     boolean isNull_7 = true;
/* 123 */     java.lang.String value_7 = null;
/* 124 */     isNull_7 = false;
/* 125 */     if (!isNull_7) {
/* 126 */
/* 127 */       Object funcResult_3 = null;
/* 128 */       funcResult_3 = value_8.toString();
/* 129 */       value_7 = (java.lang.String) funcResult_3;
/* 130 */
/* 131 */     }
/* 132 */     if (isNull_7) {
/* 133 */       values_0[3] = null;
/* 134 */     } else {
/* 135 */       values_0[3] = value_7;
/* 136 */     }
/* 137 */
/* 138 */     UTF8String value_10 = i.getUTF8String(4);
/* 139 */     boolean isNull_9 = true;
/* 140 */     java.lang.String value_9 = null;
/* 141 */     isNull_9 = false;
/* 142 */     if (!isNull_9) {
/* 143 */
/* 144 */       Object funcResult_4 = null;
/* 145 */       funcResult_4 = value_10.toString();
/* 146 */       value_9 = (java.lang.String) funcResult_4;
/* 147 */
/* 148 */     }
/* 149 */     if (isNull_9) {
/* 150 */       values_0[4] = null;
/* 151 */     } else {
/* 152 */       values_0[4] = value_9;
/* 153 */     }
/* 154 */
/* 155 */     UTF8String value_12 = i.getUTF8String(5);
/* 156 */     boolean isNull_11 = true;
/* 157 */     java.lang.String value_11 = null;
/* 158 */     isNull_11 = false;
/* 159 */     if (!isNull_11) {
/* 160 */
/* 161 */       Object funcResult_5 = null;
/* 162 */       funcResult_5 = value_12.toString();
/* 163 */       value_11 = (java.lang.String) funcResult_5;
/* 164 */
/* 165 */     }
/* 166 */     if (isNull_11) {
/* 167 */       values_0[5] = null;
/* 168 */     } else {
/* 169 */       values_0[5] = value_11;
/* 170 */     }
/* 171 */
/* 172 */   }
/* 173 */
/* 174 */
/* 175 */   private void createExternalRow_0_3(InternalRow i, Object[] values_0) {
/* 176 */
/* 177 */     UTF8String value_20 = i.getUTF8String(9);
/* 178 */     boolean isNull_19 = true;
/* 179 */     java.lang.String value_19 = null;
/* 180 */     isNull_19 = false;
/* 181 */     if (!isNull_19) {
/* 182 */
/* 183 */       Object funcResult_9 = null;
/* 184 */       funcResult_9 = value_20.toString();
/* 185 */       value_19 = (java.lang.String) funcResult_9;
/* 186 */
/* 187 */     }
/* 188 */     if (isNull_19) {
/* 189 */       values_0[9] = null;
/* 190 */     } else {
/* 191 */       values_0[9] = value_19;
/* 192 */     }
/* 193 */
/* 194 */     UTF8String value_22 = i.getUTF8String(10);
/* 195 */     boolean isNull_21 = true;
/* 196 */     java.lang.String value_21 = null;
/* 197 */     isNull_21 = false;
/* 198 */     if (!isNull_21) {
/* 199 */
/* 200 */       Object funcResult_10 = null;
/* 201 */       funcResult_10 = value_22.toString();
/* 202 */       value_21 = (java.lang.String) funcResult_10;
/* 203 */
/* 204 */     }
/* 205 */     if (isNull_21) {
/* 206 */       values_0[10] = null;
/* 207 */     } else {
/* 208 */       values_0[10] = value_21;
/* 209 */     }
/* 210 */
/* 211 */     UTF8String value_24 = i.getUTF8String(11);
/* 212 */     boolean isNull_23 = true;
/* 213 */     java.lang.String value_23 = null;
/* 214 */     isNull_23 = false;
/* 215 */     if (!isNull_23) {
/* 216 */
/* 217 */       Object funcResult_11 = null;
/* 218 */       funcResult_11 = value_24.toString();
/* 219 */       value_23 = (java.lang.String) funcResult_11;
/* 220 */
/* 221 */     }
/* 222 */     if (isNull_23) {
/* 223 */       values_0[11] = null;
/* 224 */     } else {
/* 225 */       values_0[11] = value_23;
/* 226 */     }
/* 227 */
/* 228 */   }
/* 229 */
/* 230 */
/* 231 */   private void createExternalRow_0_0(InternalRow i, Object[] values_0) {
/* 232 */
/* 233 */     UTF8String value_2 = i.getUTF8String(0);
/* 234 */     boolean isNull_1 = true;
/* 235 */     java.lang.String value_1 = null;
/* 236 */     isNull_1 = false;
/* 237 */     if (!isNull_1) {
/* 238 */
/* 239 */       Object funcResult_0 = null;
/* 240 */       funcResult_0 = value_2.toString();
/* 241 */       value_1 = (java.lang.String) funcResult_0;
/* 242 */
/* 243 */     }
/* 244 */     if (isNull_1) {
/* 245 */       values_0[0] = null;
/* 246 */     } else {
/* 247 */       values_0[0] = value_1;
/* 248 */     }
/* 249 */
/* 250 */     UTF8String value_4 = i.getUTF8String(1);
/* 251 */     boolean isNull_3 = true;
/* 252 */     java.lang.String value_3 = null;
/* 253 */     isNull_3 = false;
/* 254 */     if (!isNull_3) {
/* 255 */
/* 256 */       Object funcResult_1 = null;
/* 257 */       funcResult_1 = value_4.toString();
/* 258 */       value_3 = (java.lang.String) funcResult_1;
/* 259 */
/* 260 */     }
/* 261 */     if (isNull_3) {
/* 262 */       values_0[1] = null;
/* 263 */     } else {
/* 264 */       values_0[1] = value_3;
/* 265 */     }
/* 266 */
/* 267 */     UTF8String value_6 = i.getUTF8String(2);
/* 268 */     boolean isNull_5 = true;
/* 269 */     java.lang.String value_5 = null;
/* 270 */     isNull_5 = false;
/* 271 */     if (!isNull_5) {
/* 272 */
/* 273 */       Object funcResult_2 = null;
/* 274 */       funcResult_2 = value_6.toString();
/* 275 */       value_5 = (java.lang.String) funcResult_2;
/* 276 */
/* 277 */     }
/* 278 */     if (isNull_5) {
/* 279 */       values_0[2] = null;
/* 280 */     } else {
/* 281 */       values_0[2] = value_5;
/* 282 */     }
/* 283 */
/* 284 */   }
/* 285 */
/* 286 */ }

25/02/13 17:21:50 INFO CodeGenerator: Code generated in 26.8189 ms
+--------------------+-----------------------+-----------+----------+----------+----------------------+---------------------+-----------------+----------------+--------------------+-----------------+---------------------+---------+
|        Neighborhood|Building.Classification|Total.Units|Year_Built|Gross.SqFt|Estimated.Gross.Income|Gross.Income.per.SqFt|Estimated.Expense|Expense.per.SqFt|Net.Operating.Income|Full.Market.Value|Market.Value.per.SqFt|     Boro|
+--------------------+-----------------------+-----------+----------+----------+----------------------+---------------------+-----------------+----------------+--------------------+-----------------+---------------------+---------+
|         HARLEM-EAST|         R4-CONDOMINIUM|         19|      2007|     26231|                830473|                31.66|           325527|           12.41|              504946|          3767000|               143.61|Manhattan|
|             CLINTON|         R4-CONDOMINIUM|         67|      2008|     96337|               3880454|                40.28|          1039476|           10.79|             2840978|         21466995|               222.83|Manhattan|
|        EAST VILLAGE|         R4-CONDOMINIUM|         96|      2006|     93382|               3733412|                39.98|           747990|            8.01|             2985422|         22563999|               241.63|Manhattan|
|         FORT GREENE|         R4-CONDOMINIUM|        108|      2006|    118153|               3008175|                25.46|          1450919|           12.28|             1557256|         11289998|                95.55| Brooklyn|
|       COLLEGE POINT|         R4-CONDOMINIUM|         33|      2002|     30185|                623018|                20.64|           211597|            7.01|              411421|          2850993|                94.45|   Queens|
|             JAMAICA|         R4-CONDOMINIUM|         18|      2008|     27452|                617670|                 22.5|           202047|            7.36|              415623|          2579004|                93.95|   Queens|
|  BEDFORD STUYVESANT|         R4-CONDOMINIUM|          4|      2003|      5772|                102742|                 17.8|            49697|            8.61|               53045|           383000|                66.35| Brooklyn|
|   WILLIAMSBURG-EAST|         R4-CONDOMINIUM|         14|      2008|     13263|                326800|                24.64|           135415|           10.21|              191385|          1391000|               104.88| Brooklyn|
|UPPER EAST SIDE (...|         R4-CONDOMINIUM|          9|      2005|     29100|                861360|                 29.6|           165870|             5.7|              695490|          4894993|               168.21|Manhattan|
|      BRIGHTON BEACH|         R4-CONDOMINIUM|         34|      2006|     37636|                850950|                22.61|           302087|            8.03|              548863|          4093002|               108.75| Brooklyn|
|      FLUSHING-NORTH|         R4-CONDOMINIUM|          7|      2006|      8876|                190301|                21.44|            57694|             6.5|              132607|           973000|               109.62|   Queens|
|      HARLEM-CENTRAL|         R4-CONDOMINIUM|         35|      2006|     66215|               1569958|                23.71|           705190|           10.65|              864768|          6304012|                95.21|Manhattan|
|DOWNTOWN-FULTON F...|         R4-CONDOMINIUM|         13|      2007|     20085|                442071|                22.01|           154655|             7.7|              287416|          2107998|               104.95| Brooklyn|
|            GRAMERCY|         RR-CONDOMINIUM|         49|      2006|     60117|               2401073|                39.94|           835025|           13.89|             1566048|         11837000|                196.9|Manhattan|
|GREENWICH VILLAGE...|         R4-CONDOMINIUM|         30|      2008|     62138|               2490000|                40.07|           685000|           11.02|             1805000|         13623998|               219.25|Manhattan|
| OCEAN PARKWAY-NORTH|         R4-CONDOMINIUM|         44|      2008|     43528|                936723|                21.52|           386093|            8.87|              550630|          4076003|                93.64| Brooklyn|
|            WOODSIDE|         R4-CONDOMINIUM|         28|      2005|     19625|                393678|                20.06|           137375|               7|              256303|          1833003|                 93.4|   Queens|
|      FLUSHING-NORTH|         R4-CONDOMINIUM|         32|      2006|     51000|               1086300|                 21.3|           333030|            6.53|              753270|          5526997|               108.37|   Queens|
|      HARLEM-CENTRAL|         RR-CONDOMINIUM|         49|      2007|     53079|               1485000|                27.98|           500000|            9.42|              985000|          6098000|               114.89|Manhattan|
|DOWNTOWN-FULTON F...|         R4-CONDOMINIUM|         56|      2006|     58066|               1354680|                23.33|           473819|            8.16|              880861|          6046006|               104.12| Brooklyn|
+--------------------+-----------------------+-----------+----------+----------+----------------------+---------------------+-----------------+----------------+--------------------+-----------------+---------------------+---------+
only showing top 20 rows

>>>

















